import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,d as p}from"./app.0662e65c.js";const t={},e=p(`<h1 id="\u54C8\u5E0C\u8868" tabindex="-1"><a class="header-anchor" href="#\u54C8\u5E0C\u8868" aria-hidden="true">#</a> \u54C8\u5E0C\u8868</h1><h2 id="_1-\u6570\u636E\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#_1-\u6570\u636E\u7ED3\u6784" aria-hidden="true">#</a> 1-\u6570\u636E\u7ED3\u6784</h2><h3 id="_1-\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#_1-\u6982\u5FF5" aria-hidden="true">#</a> 1.\u6982\u5FF5</h3><blockquote><p>\u54C8\u5E0C\u8868\uFF08Hash table\uFF09\u4E5F\u53EB\u6563\u5217\u8868\u3002</p><p>\u6839\u636E<code>\u952E\uFF08Key\uFF09</code>\u800C<code>\u76F4\u63A5\u8BBF\u95EE</code>\u5728\u5185\u5B58\u50A8\u5B58\u4F4D\u7F6E\u7684\u6570\u636E\u7ED3\u6784\u3002</p><p>\u5B83\u901A\u8FC7\u628A\u5173\u952E\u7801\u503C\u6620\u5C04\u5230\u8868\u4E2D\u4E00\u4E2A\u4F4D\u7F6E\u6765\u8BBF\u95EE\u8BB0\u5F55\uFF0C\u4EE5\u52A0\u5FEB\u67E5\u627E\u7684\u901F\u5EA6\u3002</p><p>\u8FD9\u4E2A\u6620\u5C04\u51FD\u6570\u79F0\u4E3A<code>\u6563\u5217\u51FD\u6570</code>\uFF0C\u5B58\u653E\u8BB0\u5F55\u7684\u6570\u7EC4\u79F0\u505A<code>\u6563\u5217\u8868</code>\u3002</p><p>\u5E38\u89C1\u7684<code>\u6563\u5217(\u54C8\u5E0C)\u51FD\u6570</code>\u6709<code>MD5</code>\u3001<code>SHA</code>\u3001<code>CRC</code>\u7B49</p></blockquote><p><img src="https://raw.githubusercontent.com/huluhutu/blogimg/main/img/image-20211220124800956.3f5e4d9e.png" alt="image-20211220124800956" loading="lazy"></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u4F18\u52BF\u662F\u4EC0\u4E48?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>\u5C06\u6570\u636E\u6709\u6548\u7684\u505A\u4E86\u5207\u5206\uFF0C\u5206\u800C\u6CBB\u4E4B</li><li>\u901A\u8FC7Key\u53EF\u4EE5\u76F4\u63A5\u83B7\u53D6\u5230\u8981\u67E5\u627E\u7684\u6570\u636E\uFF0C\u67E5\u8BE2\u6548\u7387\u9AD8</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u52A3\u52BF\u662F\u4EC0\u4E48?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>\u53EF\u80FD\u5B58\u5728hash\u51B2\u7A81</li></ol><blockquote><p>\u5982\u679C\u6709HASH\u51B2\u7A81\uFF0C\u90A3\u4E48\u5728\u51B2\u7A81\u7684\u4F4D\u7F6E\uFF0C\u5C06\u6570\u636E\u6784\u5EFA\u4E3A\u94FE\u8868\u7ED3\u6784\uFF0C\u6781\u7AEF\u60C5\u51B5\u4E0B\uFF0CHASH\u8868\u53EF\u80FD\u4F1A\u9000\u5316\u4E3A\u94FE\u8868\uFF0C\u6240\u6709\u5143\u7D20\u90FD\u88AB\u5B58\u50A8\u5728\u540C\u4E00\u4E2A\u8282\u70B9\u7684\u94FE\u8868\u4E2D\u3002O(n)</p><p><code>\u88C5\u8F7D\u56E0\u5B50=\u54C8\u5E0C\u8868\u4E2D\u7684\u5143\u7D20\u4E2A\u6570 / \u54C8\u5E0C\u8868\u957F\u5EA6</code>\uFF0C\u5982\u679C\u88C5\u8F7D\u56E0\u5B50\u8FC7\u5927\uFF0C\u8BF4\u660E\u94FE\u8868\u7684\u957F\u5EA6\u8D8A\u957F\uFF0C\u6027\u80FD\u8D8A\u4F4E\uFF0C\u54C8\u5E0C\u8868\u9700\u8981\u8FDB\u884C\u6269\u5BB9\uFF0C\u5C06\u6570\u636E\u8FC1\u79FB\u5230\u65B0\u7684\u54C8\u5E0C\u8868\u4E2D\u3002</p></blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u573A\u666F\u4E3E\u4F8B\uFF1A
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>Redis</li><li>HashMap</li></ol><h3 id="_2-\u6A21\u62DF\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-\u6A21\u62DF\u5B9E\u73B0" aria-hidden="true">#</a> 2.\u6A21\u62DF\u5B9E\u73B0</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MsHashTable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token comment">//\u6563\u5217\u8868 \u6570\u7EC4\u7ED3\u6784 (\u6BCF\u4E00\u4E2A\u5143\u7D20\u4E0A \u662F\u4E00\u4E2A\u94FE\u8868\u7ED3\u6784)</span>
    <span class="token keyword">private</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> table<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>
        <span class="token comment">//hash\u51FD\u6570\u8BA1\u7B97\u7684\u7ED3\u679C</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> hash<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">K</span> key<span class="token punctuation">;</span>
        <span class="token class-name">V</span> value<span class="token punctuation">;</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span><span class="token class-name">K</span> key<span class="token punctuation">,</span><span class="token class-name">V</span> value<span class="token punctuation">,</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>hash <span class="token operator">=</span> hash<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">MsHashTable</span><span class="token punctuation">(</span><span class="token keyword">int</span> capacity<span class="token punctuation">)</span><span class="token punctuation">{</span>
        table <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">[</span>capacity<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span><span class="token class-name">V</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//1. \u8BA1\u7B97hash\u503C</span>
        <span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token punctuation">(</span>table<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">;</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span>key<span class="token punctuation">,</span>value<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> kvNode <span class="token operator">=</span> table<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>kvNode <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//\u8FD9\u4E2A\u6570\u7EC4\u4F4D\u7F6E \u6CA1\u6709\u6570\u636E \u662F\u7B2C\u4E00\u4E2A</span>
            table<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> node<span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u6570\u7EC4\u4F4D\u7F6E\u6709\u503C</span>
        <span class="token comment">//\u9700\u8981\u5224\u65AD\u4E00\u4E0Bkey\u662F\u5426\u76F8\u7B49\uFF0Ckey\u76F8\u7B49\u7684\u60C5\u51B5\u4E0B \u8FDB\u884C\u66FF\u6362</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>kvNode<span class="token punctuation">.</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            kvNode<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            kvNode<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token punctuation">(</span>table<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">;</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> node <span class="token operator">=</span> table<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> newNode <span class="token operator">=</span> node<span class="token punctuation">;</span>
        <span class="token comment">//\u6B63\u5E38 \u505A\u4E00\u4E2A\u5FAA\u73AF\uFF0C\u67E5\u627Ekey\u662F\u5426\u5339\u914D\uFF0C\u77E5\u9053next\u4E3Anull</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>newNode<span class="token punctuation">.</span>next <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>newNode<span class="token punctuation">.</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            newNode <span class="token operator">=</span> newNode<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> newNode<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> h<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token punctuation">(</span>h <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MsHashTable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> hashTable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MsHashTable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hashTable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;mszlu1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hashTable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;mszlu2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hashTable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;mszlu3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hashTable<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;key1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hashTable<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;key2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#_2-\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> 2-\u89E3\u9898\u601D\u8DEF</h2><h2 id="_3-\u4F8B\u9898" tabindex="-1"><a class="header-anchor" href="#_3-\u4F8B\u9898" aria-hidden="true">#</a> 3-\u4F8B\u9898</h2>`,16),c=[e];function o(l,i){return s(),a("div",null,c)}const d=n(t,[["render",o],["__file","3-Hash.html.vue"]]);export{d as default};
