import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as s,b as n,e as t,d as a,r as i}from"./app.0662e65c.js";const l={},u=a('<h1 id="\u5E76\u53D1\u7F16\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u5E76\u53D1\u7F16\u7A0B" aria-hidden="true">#</a> \u5E76\u53D1\u7F16\u7A0B</h1><h2 id="\u8FDB\u7A0B\u548C\u7EBF\u7A0B\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u7A0B\u548C\u7EBF\u7A0B\u7684\u533A\u522B" aria-hidden="true">#</a> \u8FDB\u7A0B\u548C\u7EBF\u7A0B\u7684\u533A\u522B</h2><ul><li><strong>\u8FDB\u7A0B\u662F\u7CFB\u7EDF\u8D44\u6E90\u5206\u914D\u7684\u57FA\u672C\u5355\u4F4D</strong></li><li><strong>\u7EBF\u7A0B\u662F\u5904\u7406\u5668\u8C03\u5EA6\u7684\u57FA\u672C\u5355\u4F4D</strong></li></ul><h3 id="\u8FDB\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u7A0B" aria-hidden="true">#</a> \u8FDB\u7A0B</h3><p>\u8FDB\u7A0B\uFF08Process\uFF09\u662F\u8BA1\u7B97\u673A\u4E2D\u7684\u7A0B\u5E8F\u5173\u4E8E\u67D0\u6570\u636E\u96C6\u5408\u4E0A\u7684\u4E00\u6B21\u8FD0\u884C\u6D3B\u52A8\uFF0C\u662F\u7CFB\u7EDF\u8FDB\u884C\u8D44\u6E90\u5206\u914D\u548C\u8C03\u5EA6\u7684\u57FA\u672C\u5355\u4F4D\uFF0C\u662F\u64CD\u4F5C\u7CFB\u7EDF\u7ED3\u6784\u7684\u57FA\u7840\u3002\u7A0B\u5E8F\u662F\u6307\u4EE4\u3001\u6570\u636E\u53CA\u5176\u7EC4\u7EC7\u5F62\u5F0F\u7684\u63CF\u8FF0\uFF0C\u8FDB\u7A0B\u662F\u7A0B\u5E8F\u7684\u5B9E\u4F53\u3002</p><p><strong>\u8FDB\u7A0B\u5177\u6709\u7684\u7279\u5F81\uFF1A</strong></p><ul><li><strong>\u52A8\u6001\u6027</strong>\uFF1A\u8FDB\u7A0B\u662F\u7A0B\u5E8F\u7684\u4E00\u6B21\u6267\u884C\u8FC7\u7A0B\uFF0C\u662F\u4E34\u65F6\u7684\uFF0C\u6709\u751F\u547D\u671F\u7684\uFF0C\u662F\u52A8\u6001\u4EA7\u751F\uFF0C\u52A8\u6001\u6D88\u4EA1\u7684</li><li><strong>\u5E76\u53D1\u6027</strong>\uFF1A\u4EFB\u4F55\u8FDB\u7A0B\u90FD\u53EF\u4EE5\u540C\u5176\u4ED6\u8FDB\u884C\u4E00\u8D77\u5E76\u53D1\u6267\u884C</li><li><strong>\u72EC\u7ACB\u6027</strong>\uFF1A\u8FDB\u7A0B\u662F\u7CFB\u7EDF\u8FDB\u884C\u8D44\u6E90\u5206\u914D\u548C\u8C03\u5EA6\u7684\u4E00\u4E2A\u72EC\u7ACB\u5355\u4F4D</li><li><strong>\u7ED3\u6784\u6027</strong>\uFF1A\u8FDB\u7A0B\u7531\u7A0B\u5E8F\uFF0C\u6570\u636E\u548C\u8FDB\u7A0B\u63A7\u5236\u5757\u4E09\u90E8\u5206\u7EC4\u6210</li></ul>',7),r={href:"https://baike.baidu.com/item/%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%9D%97/7205297?fromModule=lemma_inlink",target:"_blank",rel:"noopener noreferrer"},d=a(`<h3 id="\u7EBF\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B" aria-hidden="true">#</a> \u7EBF\u7A0B</h3><p>\u7EBF\u7A0B\u662F\u8F7B\u91CF\u7EA7\u7684\u8FDB\u7A0B\uFF0C\u662F\u7A0B\u5E8F\u6267\u884C\u7684\u6700\u5C0F\u5355\u5143\uFF0C\u4F7F\u7528\u591A\u7EBF\u7A0B\u800C\u4E0D\u662F\u591A\u8FDB\u7A0B\u53BB\u8FDB\u884C\u5E76\u53D1\u7A0B\u5E8F\u7684\u8BBE\u8BA1\uFF0C\u662F\u56E0\u4E3A\u7EBF\u7A0B\u95F4\u7684\u5207\u6362\u548C\u8C03\u5EA6\u7684\u6210\u672C\u8FDC\u8FDC\u5C0F\u4E8E\u8FDB\u7A0B\u3002</p><p><img src="https://raw.githubusercontent.com/huluhutu/blogimg/main/img/image-20221015141422902.png" alt="image-20221015141422902" loading="lazy"></p><p>\u7EBF\u7A0B\u7684\u6240\u6709\u72B6\u6001\u5728<strong>java.lang.Thread\u4E2D\u7684State</strong>\u679A\u4E3E\u4E2D\u6709\u5B9A\u4E49\uFF0C\u5982\uFF1A</p><div class="language-Java ext-Java line-numbers-mode"><pre class="language-Java"><code>public enum State {
    NEW,
    RUNNABLE,
    BLOCKED,
    WAITING,
    TIMED_WAITING,
    TERMINATED;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EBF\u7A0B\u51E0\u4E2A\u72B6\u6001\u7684\u4ECB\u7ECD\uFF1A</p><ul><li><strong>New</strong>\uFF1A\u8868\u793A\u521A\u521A\u521B\u5EFA\u7684\u7EBF\u7A0B\uFF0C\u8FD9\u79CD\u7EBF\u7A0B\u8FD8\u6CA1\u6709\u5F00\u59CB\u6267\u884C</li><li><strong>RUNNABLE</strong>\uFF1A\u8FD0\u884C\u72B6\u6001\uFF0C\u7EBF\u7A0B\u7684start()\u65B9\u6CD5\u8C03\u7528\u540E\uFF0C\u7EBF\u7A0B\u4F1A\u5904\u4E8E\u8FD9\u79CD\u72B6\u6001</li><li><strong>BLOCKED</strong>\uFF1A\u963B\u585E\u72B6\u6001\u3002\u5F53\u7EBF\u7A0B\u5728\u6267\u884C\u7684\u8FC7\u7A0B\u4E2D\u9047\u5230\u4E86synchronized\u540C\u6B65\u5757\uFF0C\u4F46\u8FD9\u4E2A\u540C\u6B65\u5757\u88AB\u5176\u4ED6\u7EBF\u7A0B\u5DF2\u83B7\u53D6\u8FD8\u672A\u91CA\u653E\u65F6\uFF0C\u5F53\u524D\u7EBF\u7A0B\u5C06\u8FDB\u5165\u963B\u585E\u72B6\u6001\uFF0C\u4F1A\u6682\u505C\u6267\u884C\uFF0C\u76F4\u5230\u83B7\u53D6\u5230\u9501\u3002\u5F53\u7EBF\u7A0B\u83B7\u53D6\u5230\u9501\u4E4B\u540E\uFF0C\u53C8\u4F1A\u8FDB\u5165\u5230\u8FD0\u884C\u72B6\u6001\uFF08RUNNABLE\uFF09</li><li><strong>WAITING</strong>\uFF1A\u7B49\u5F85\u72B6\u6001\u3002\u548CTIME_WAITING\u90FD\u8868\u793A\u7B49\u5F85\u72B6\u6001\uFF0C\u533A\u522B\u662FWAITING\u4F1A\u8FDB\u5165\u4E00\u4E2A\u65E0\u65F6\u95F4\u9650\u5236\u7684\u7B49\uFF0C\u800CTIME_WAITING\u4F1A\u8FDB\u5165\u4E00\u4E2A\u6709\u9650\u7684\u65F6\u95F4\u7B49\u5F85\uFF0C\u90A3\u4E48\u7B49\u5F85\u7684\u7EBF\u7A0B\u7A76\u7ADF\u5728\u7B49\u4EC0\u4E48\u5462\uFF1F\u4E00\u822C\u6765\u8BF4\uFF0CWAITING\u7684\u7EBF\u7A0B\u6B63\u5F0F\u5728\u7B49\u5F85\u4E00\u4E9B\u7279\u6B8A\u7684\u4E8B\u4EF6\uFF0C\u6BD4\u5982\uFF0C\u901A\u8FC7wait()\u65B9\u6CD5\u7B49\u5F85\u7684\u7EBF\u7A0B\u5728\u7B49\u5F85notify()\u65B9\u6CD5\uFF0C\u800C\u901A\u8FC7join()\u65B9\u6CD5\u7B49\u5F85\u7684\u7EBF\u7A0B\u5219\u4F1A\u7B49\u5F85\u76EE\u6807\u7EBF\u7A0B\u7684\u7EC8\u6B62\u3002\u4E00\u65E6\u7B49\u5230\u671F\u671B\u7684\u4E8B\u4EF6\uFF0C\u7EBF\u7A0B\u5C31\u4F1A\u518D\u6B21\u8FDB\u5165RUNNABLE\u8FD0\u884C\u72B6\u6001\u3002</li><li><strong>TERMINATED</strong>\uFF1A\u8868\u793A\u7ED3\u675F\u72B6\u6001\uFF0C\u7EBF\u7A0B\u6267\u884C\u5B8C\u6BD5\u4E4B\u540E\u8FDB\u5165\u7ED3\u675F\u72B6\u6001\u3002</li></ul><p><strong>\u6CE8\u610F\uFF1A\u4ECENEW\u72B6\u6001\u51FA\u53D1\u540E\uFF0C\u7EBF\u7A0B\u4E0D\u80FD\u5728\u56DE\u5230NEW\u72B6\u6001\uFF0C\u540C\u7406\uFF0C\u5904\u7406TERMINATED\u72B6\u6001\u7684\u7EBF\u7A0B\u4E5F\u4E0D\u80FD\u5728\u56DE\u5230RUNNABLE\u72B6\u6001</strong></p><h2 id="\u5E76\u53D1\u548C\u5E76\u884C\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u5E76\u53D1\u548C\u5E76\u884C\u7684\u533A\u522B" aria-hidden="true">#</a> \u5E76\u53D1\u548C\u5E76\u884C\u7684\u533A\u522B</h2><ul><li><strong>\u5E76\u53D1</strong>\u8BF4\u7684\u662F\u5728<strong>\u4E00\u4E2A\u65F6\u95F4\u6BB5\u5185</strong>\uFF0C\u591A\u4EF6\u4E8B\u60C5\u5728\u8FD9\u4E2A\u65F6\u95F4\u6BB5\u5185<strong>\u4EA4\u66FF\u6267\u884C</strong>\uFF0C\u56E0\u4E3A\u6267\u884C\u65F6\u95F4\u6BD4\u8F83\u77ED\uFF0C\u5728\u4EBA\u770B\u6765\u50CF\u662F\u540C\u4E00\u65F6\u95F4\u6267\u884C\u7684\u3002</li><li><strong>\u5E76\u884C</strong>\u8BF4\u7684\u662F\u591A\u4EF6\u4E8B\u60C5\u5728<strong>\u540C\u4E00\u4E2A\u65F6\u523B</strong>\u540C\u4E8B\u53D1\u751F\u3002</li></ul><h2 id="\u540C\u6B65\u548C\u5F02\u6B65-\u963B\u585E\u548C\u975E\u963B\u585E\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u540C\u6B65\u548C\u5F02\u6B65-\u963B\u585E\u548C\u975E\u963B\u585E\u7684\u533A\u522B" aria-hidden="true">#</a> \u540C\u6B65\u548C\u5F02\u6B65\uFF0C\u963B\u585E\u548C\u975E\u963B\u585E\u7684\u533A\u522B</h2><p>\u300A\u64CD\u4F5C\u7CFB\u7EDF\u6982\u5FF5\uFF08\u7B2C\u4E5D\u7248\uFF09\u300B\u4E2D\u6709\u5173\u8FDB\u7A0B\u95F4\u901A\u4FE1\u7684\u90E8\u5206\u662F\u5982\u4F55\u89E3\u91CA\u7684\uFF1A</p><p>\u8FDB\u7A0B\u95F4\u7684\u901A\u4FE1\u65F6\u901A\u8FC7 send() \u548C receive() \u4E24\u79CD\u57FA\u672C\u64CD\u4F5C\u5B8C\u6210\u7684\u3002\u5177\u4F53\u5982\u4F55\u5B9E\u73B0\u8FD9\u4E24\u79CD\u57FA\u7840\u64CD\u4F5C\uFF0C\u5B58\u5728\u7740\u4E0D\u540C\u7684\u8BBE\u8BA1\u3002 <strong>\u6D88\u606F\u7684\u4F20\u9012\u6709\u53EF\u80FD\u662F\u963B\u585E\u7684\u6216\u975E\u963B\u585E\u7684 -- \u4E5F\u88AB\u79F0\u4E3A\u540C\u6B65\u6216\u5F02\u6B65\u7684</strong>\uFF1A</p><ul><li>\u963B\u585E\u5F0F\u53D1\u9001\uFF08blocking send\uFF09. \u53D1\u9001\u65B9\u8FDB\u7A0B\u4F1A\u88AB\u4E00\u76F4\u963B\u585E\uFF0C \u76F4\u5230\u6D88\u606F\u88AB\u63A5\u53D7\u65B9\u8FDB\u7A0B\u6536\u5230\u3002</li><li>\u975E\u963B\u585E\u5F0F\u53D1\u9001\uFF08nonblocking send\uFF09\u3002 \u53D1\u9001\u65B9\u8FDB\u7A0B\u8C03\u7528 send() \u540E\uFF0C \u7ACB\u5373\u5C31\u53EF\u4EE5\u5176\u4ED6\u64CD\u4F5C\u3002</li><li>\u963B\u585E\u5F0F\u63A5\u6536\uFF08blocking receive\uFF09 \u63A5\u6536\u65B9\u8C03\u7528 receive() \u540E\u4E00\u76F4\u963B\u585E\uFF0C \u76F4\u5230\u6D88\u606F\u5230\u8FBE\u53EF\u7528\u3002</li><li>\u975E\u963B\u585E\u5F0F\u63A5\u53D7\uFF08nonblocking receive\uFF09 \u63A5\u6536\u65B9\u8C03\u7528 receive() \u51FD\u6570\u540E\uFF0C \u8981\u4E48\u5F97\u5230\u4E00\u4E2A\u6709\u6548\u7684\u7ED3\u679C\uFF0C \u8981\u4E48\u5F97\u5230\u4E00\u4E2A\u7A7A\u503C\uFF0C \u5373\u4E0D\u4F1A\u88AB\u963B\u585E\u3002</li></ul><p><strong>\u4E0A\u8FF0\u4E0D\u540C\u7C7B\u578B\u7684\u53D1\u9001\u65B9\u5F0F\u548C\u4E0D\u540C\u7C7B\u578B\u7684\u63A5\u6536\u65B9\u5F0F\uFF0C\u53EF\u4EE5\u81EA\u7531\u7EC4\u5408\u3002</strong></p><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C \u4ECE\u8FDB\u7A0B\u7EA7\u901A\u4FE1\u7684\u7EF4\u5EA6\u8BA8\u8BBA\u65F6\uFF0C \u963B\u585E\u548C\u540C\u6B65\uFF08\u975E\u963B\u585E\u548C\u5F02\u6B65\uFF09\u5C31\u662F\u4E00\u5BF9\u540C\u4E49\u8BCD\uFF0C \u4E14\u9700\u8981\u9488\u5BF9<strong>\u53D1\u9001\u65B9</strong>\u548C<strong>\u63A5\u6536\u65B9</strong>\u4F5C\u533A\u5206\u5BF9\u5F85\u3002</p><h2 id="\u8BF4\u4E00\u8BF4\u539F\u5B50\u6027\u3001\u53EF\u89C1\u6027\u3001\u6709\u5E8F\u6027" tabindex="-1"><a class="header-anchor" href="#\u8BF4\u4E00\u8BF4\u539F\u5B50\u6027\u3001\u53EF\u89C1\u6027\u3001\u6709\u5E8F\u6027" aria-hidden="true">#</a> \u8BF4\u4E00\u8BF4\u539F\u5B50\u6027\u3001\u53EF\u89C1\u6027\u3001\u6709\u5E8F\u6027</h2><h3 id="\u539F\u5B50\u6027" tabindex="-1"><a class="header-anchor" href="#\u539F\u5B50\u6027" aria-hidden="true">#</a> \u539F\u5B50\u6027</h3>`,18),k={href:"https://so.csdn.net/so/search?q=%E5%8E%9F%E5%AD%90%E6%80%A7&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},v=s("strong",null,"\u4E00\u4E2A\u64CD\u4F5C\u662F\u4E0D\u53EF\u4E2D\u65AD\u7684\uFF0C\u8981\u4E48\u5168\u90E8\u6267\u884C\u6210\u529F\u8981\u4E48\u5168\u90E8\u6267\u884C\u5931\u8D25\uFF0C\u6709\u7740\u201C\u540C\u751F\u5171\u6B7B\u201D\u7684\u611F\u89C9",-1),m=a(`<p>\u50CF\u662Fa++ \u5E76\u4E0D\u662F\u539F\u5B50\u64CD\u4F5C\uFF0C\u56E0\u4E3Aa++\u5176\u5B9E\u5305\u62EC\uFF0C\u8BFB\u53D6a\u7684\u503C\uFF0C\u5C06a\u7684\u503C\u52A01\uFF0C\u5C06\u7ED3\u679C\u8D4B\u503C\u7ED9a</p><h3 id="\u53EF\u89C1\u6027" tabindex="-1"><a class="header-anchor" href="#\u53EF\u89C1\u6027" aria-hidden="true">#</a> \u53EF\u89C1\u6027</h3><p>\u770B\u4E00\u4E0Bjava\u7EBF\u7A0B\u5185\u5B58\u6A21\u578B\uFF1A</p><p><img src="https://raw.githubusercontent.com/huluhutu/blogimg/main/img/image-20220929204734662.png" alt="image-20220929204734662" loading="lazy"></p><ul><li>\u6211\u4EEC\u5B9A\u4E49\u7684\u6240\u6709\u53D8\u91CF\u90FD\u50A8\u5B58\u5728<code>\u4E3B\u5185\u5B58</code>\u4E2D</li><li>\u6BCF\u4E2A\u7EBF\u7A0B\u90FD\u6709\u81EA\u5DF1<code>\u72EC\u7ACB\u7684\u5DE5\u4F5C\u5185\u5B58</code>\uFF0C\u91CC\u9762\u4FDD\u5B58\u8BE5\u7EBF\u7A0B\u4F7F\u7528\u5230\u7684\u53D8\u91CF\u7684\u526F\u672C\uFF08\u4E3B\u5185\u5B58\u4E2D\u8BE5\u53D8\u91CF\u7684\u4E00\u4EFD\u62F7\u8D1D\uFF09</li><li>\u7EBF\u7A0B\u5BF9\u5171\u4EAB\u53D8\u91CF\u6240\u6709\u7684\u64CD\u4F5C\u90FD\u5FC5\u987B\u5728\u81EA\u5DF1\u7684\u5DE5\u4F5C\u5185\u5B58\u4E2D\u8FDB\u884C\uFF0C\u4E0D\u80FD\u76F4\u63A5\u4ECE\u4E3B\u5185\u5B58\u4E2D\u8BFB\u5199\uFF08\u4E0D\u80FD\u8D8A\u7EA7\uFF09</li><li>\u4E0D\u540C\u7EBF\u7A0B\u4E4B\u95F4\u4E5F\u65E0\u6CD5\u76F4\u63A5\u8BBF\u95EE\u5176\u4ED6\u7EBF\u7A0B\u7684\u5DE5\u4F5C\u5185\u5B58\u4E2D\u7684\u53D8\u91CF\uFF0C\u7EBF\u7A0B\u95F4\u53D8\u91CF\u503C\u7684\u4F20\u9012\u9700\u8981\u901A\u8FC7\u4E3B\u5185\u5B58\u6765\u8FDB\u884C\u3002\uFF08\u540C\u7EA7\u4E0D\u80FD\u76F8\u4E92\u8BBF\u95EE\uFF09</li></ul><p>\u7EBF\u7A0B\u9700\u8981\u4FEE\u6539\u4E00\u4E2A\u5171\u4EAB\u53D8\u91CFX\uFF0C\u9700\u8981\u5148\u628AX\u4ECE\u4E3B\u5185\u5B58\u590D\u5236\u4E00\u4EFD\u5230\u7EBF\u7A0B\u7684\u5DE5\u4F5C\u5185\u5B58\uFF0C\u5728\u81EA\u5DF1\u7684\u5DE5\u4F5C\u5185\u5B58\u4E2D\u4FEE\u6539\u5B8C\u6BD5\u4E4B\u540E\uFF0C\u518D\u4ECE\u5DE5\u4F5C\u5185\u5B58\u4E2D\u56DE\u5199\u5230\u4E3B\u5185\u5B58\u3002 \u5982\u679C\u7EBF\u7A0B\u5BF9\u53D8\u91CF\u7684\u64CD\u4F5C\u6CA1\u6709\u5237\u5199\u56DE\u4E3B\u5185\u5B58\u7684\u8BDD\uFF0C\u4EC5\u4EC5\u6539\u53D8\u4E86\u81EA\u5DF1\u7684\u5DE5\u4F5C\u5185\u5B58\u7684\u53D8\u91CF\u7684\u526F\u672C\uFF0C\u90A3\u4E48\u5BF9\u4E8E\u5176\u4ED6\u7EBF\u7A0B\u6765\u8BF4\u662F\u4E0D\u53EF\u89C1\u7684\u3002 \u800C\u5982\u679C\u53E6\u4E00\u4E2A\u53D8\u91CF\u6CA1\u6709\u8BFB\u53D6\u4E3B\u5185\u5B58\u4E2D\u7684\u65B0\u7684\u503C\uFF0C\u800C\u662F\u4F7F\u7528\u65E7\u7684\u503C\u7684\u8BDD\uFF0C\u540C\u6837\u7684\u4E5F\u53EF\u4EE5\u5217\u4E3A\u4E0D\u53EF\u89C1\u3002</p><h3 id="\u6709\u5E8F\u6027" tabindex="-1"><a class="header-anchor" href="#\u6709\u5E8F\u6027" aria-hidden="true">#</a> \u6709\u5E8F\u6027</h3><p>\u6709\u5E8F\u6027\u6307\u7684\u662F\u7A0B\u5E8F\u6309\u7167\u4EE3\u7801\u7684\u5148\u540E\u987A\u5E8F\u6267\u884C\u3002</p><p>\u4E3A\u4E86\u6027\u80FD\u4F18\u5316\uFF0C\u7F16\u8BD1\u5668\u548C\u5904\u7406\u5668\u4F1A\u8FDB\u884C\u6307\u4EE4\u51B2\u6392\u5E8F\uFF0C\u6709\u65F6\u5019\u4F1A\u6539\u53D8\u7A0B\u5E8F\u8BED\u53E5\u7684\u5148\u540E\u987A\u5E8F\uFF0C\u4E5F\u5C31\u662F\u6307\u4EE4\u91CD\u6392\uFF08\u6709\u4E09\u79CD\uFF09\uFF0C\u6BD4\u5982\u7A0B\u5E8F\u3002</p><div class="language-Java ext-Java line-numbers-mode"><pre class="language-Java"><code>int a = 1;  //1
int b = 20; //2
int c = a + b; //3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7F16\u8BD1\u5668\u4F18\u5316\u540E\u53EF\u80FD\u53D8\u6210</p><div class="language-Java ext-Java line-numbers-mode"><pre class="language-Java"><code>int b = 20;  //1
int a = 1; //2
int c = a + b; //3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u7F16\u8BD1\u5668\u8C03\u6574\u4E86\u8BED\u53E5\u7684\u987A\u5E8F\uFF0C\u4F46\u662F\u4E0D\u5F71\u54CD\u7A0B\u5E8F\u7684\u6700\u7EC8\u7ED3\u679C\u3002</p><p>\u5728\u5355\u4F8B\u6A21\u5F0F\u7684\u5B9E\u73B0\u4E0A\u6709\u4E00\u79CD\u53CC\u91CD\u68C0\u9A8C\u9501\u5B9A\u7684\u65B9\u5F0F\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-Java ext-Java line-numbers-mode"><pre class="language-Java"><code>public class Singleton {
  private static Singleton instance;
  static Singleton getInstance(){
    if (instance == null) {
      synchronized(Singleton.class) {
        if (instance == null)
          instance = new Singleton();
        }
    }
    return instance;
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u5148\u770B<code>instance = new Singleton();</code></p><p><strong>\u672A\u88AB\u7F16\u8BD1\u5668\u4F18\u5316\u7684\u64CD\u4F5C\uFF1A</strong></p><ol><li>\u6307\u4EE41\uFF1A\u5206\u914D\u4E00\u6B3E\u5185\u5B58M</li><li>\u6307\u4EE42\uFF1A\u5728\u5185\u5B58M\u4E0A\u521D\u59CB\u5316Singleton\u5BF9\u8C61</li><li>\u6307\u4EE43\uFF1A\u5C06M\u7684\u5730\u5740\u8D4B\u503C\u7ED9instance\u53D8\u91CF</li></ol><p><strong>\u7F16\u8BD1\u5668\u4F18\u5316\u540E\u7684\u64CD\u4F5C\u6307\u4EE4\uFF1A</strong></p><ol><li>\u6307\u4EE41\uFF1A\u5206\u914D\u4E00\u5757\u5185\u5B58M</li><li>\u6307\u4EE42\uFF1A\u5C06M\u7684\u5730\u5740\u8D4B\u503C\u7ED9instance\u53D8\u91CF</li><li>\u6307\u4EE43\uFF1A\u5728\u5185\u5B58M\u4E0A\u521D\u59CB\u5316Singleton\u5BF9\u8C61</li></ol><h2 id="\u521B\u5EFA\u7EBF\u7A0B\u6709\u54EA\u4E9B\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u7EBF\u7A0B\u6709\u54EA\u4E9B\u65B9\u5F0F" aria-hidden="true">#</a> \u521B\u5EFA\u7EBF\u7A0B\u6709\u54EA\u4E9B\u65B9\u5F0F</h2><h3 id="\u5B9E\u73B0runnable\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0runnable\u63A5\u53E3" aria-hidden="true">#</a> \u5B9E\u73B0Runnable\u63A5\u53E3</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyRunnable</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        
    <span class="token class-name">MyRunnable</span> instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyRunnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
    <span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
    thread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B9E\u73B0callable\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0callable\u63A5\u53E3" aria-hidden="true">#</a> \u5B9E\u73B0Callable\u63A5\u53E3</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyCallable</span> <span class="token keyword">implements</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    
    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">123</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        
    <span class="token class-name">MyCallable</span> mc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyCallable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
    <span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ft <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>mc<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
    <span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>ft<span class="token punctuation">)</span><span class="token punctuation">;</span>
    thread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ft<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7EE7\u627Fthread\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u7EE7\u627Fthread\u7C7B" aria-hidden="true">#</a> \u7EE7\u627FThread\u7C7B</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyThread</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        
    <span class="token class-name">MyThread</span> mt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    mt<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8BF4\u4E00\u8BF4object\u7684\u7EBF\u7A0B\u64CD\u4F5C\u6709\u54EA\u4E9B" tabindex="-1"><a class="header-anchor" href="#\u8BF4\u4E00\u8BF4object\u7684\u7EBF\u7A0B\u64CD\u4F5C\u6709\u54EA\u4E9B" aria-hidden="true">#</a> \u8BF4\u4E00\u8BF4Object\u7684\u7EBF\u7A0B\u64CD\u4F5C\u6709\u54EA\u4E9B</h2><h3 id="wait" tabindex="-1"><a class="header-anchor" href="#wait" aria-hidden="true">#</a> wait</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u8FD9\u4E2A\u624D\u662Fnative\u65B9\u6CD5</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">wait</span><span class="token punctuation">(</span><span class="token keyword">long</span> timeout<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>


<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token function">wait</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">wait</span><span class="token punctuation">(</span><span class="token keyword">long</span> timeout<span class="token punctuation">,</span> <span class="token keyword">int</span> nanos<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;timeout value is negative&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>nanos <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> nanos <span class="token operator">&gt;</span> <span class="token number">999999</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span>
                                <span class="token string">&quot;nanosecond timeout value out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>nanos <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            timeout<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">wait</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6765\u770B\u770Bwait()\u65B9\u6CD5\u7684\u6E90\u7801\u6CE8\u91CA</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Causes the current thread to wait until another thread invokes the notify() method or the notifyAll() method for this object. In other words, this method behaves exactly as if it simply performs the call wait(0).
The current thread must own this object&#39;s monitor. The thread releases ownership of this monitor and waits until another thread notifies threads waiting on this object&#39;s monitor to wake up either through a call to the notify method or the notifyAll method. The thread then waits until it can re-obtain ownership of the monitor and resumes execution.
As in the one argument version, interrupts and spurious wakeups are possible, and this method should always be used in a loop:
           synchronized (obj) {
               while (&lt;condition does not hold&gt;)
                   obj.wait();
               ... // Perform action appropriate to condition
           }
       
This method should only be called by a thread that is the owner of this object&#39;s monitor. See the notify method for a description of the ways in which a thread can become the owner of a monitor.
Throws:
IllegalMonitorStateException \u2013 if the current thread is not the owner of the object&#39;s monitor.
InterruptedException \u2013 if any thread interrupted the current thread before or while the current thread was waiting for a notification. The interrupted status of the current thread is cleared when this exception is thrown.
See Also:
notify(), notifyAll()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5927\u81F4\u610F\u601D\u5C31\u662F\u60F3\u8981\u8C03\u7528wait\u5FC5\u987B\u5148\u83B7\u5F97\u8BE5\u5BF9\u8C61\u7684\u76D1\u89C6\u5668\uFF0Cwait\u540E\u8981\u91CA\u653E\u76D1\u89C6\u5668\uFF0C\u4E14\u7B49\u5F85\u5176\u4ED6\u7EBF\u7A0B\u6267\u884C\u8BE5\u5BF9\u8C61\u7684notify/notifyAll\u4E14\u91CA\u653E\u76D1\u89C6\u5668\u540E\u624D\u5524\u9192\uFF0C\u5F53\u7136\u4E2D\u65AD\u548C\u865A\u5047\u5524\u9192\u4E5F\u662F\u53EF\u80FD\u53D1\u751F\u7684\uFF1B</p><h3 id="notify" tabindex="-1"><a class="header-anchor" href="#notify" aria-hidden="true">#</a> notify</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6765\u770B\u770Bnotify()\u6E90\u7801\u6CE8\u91CA</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Wakes up a single thread that is waiting on this object&#39;s monitor. If any threads are waiting on this object, one of them is chosen to be awakened. The choice is arbitrary and occurs at the discretion of the implementation. A thread waits on an object&#39;s monitor by calling one of the wait methods.
The awakened thread will not be able to proceed until the current thread relinquishes the lock on this object. The awakened thread will compete in the usual manner with any other threads that might be actively competing to synchronize on this object; for example, the awakened thread enjoys no reliable privilege or disadvantage in being the next thread to lock this object.
This method should only be called by a thread that is the owner of this object&#39;s monitor. A thread becomes the owner of the object&#39;s monitor in one of three ways:
By executing a synchronized instance method of that object.
By executing the body of a synchronized statement that synchronizes on the object.
For objects of type Class, by executing a synchronized static method of that class.
Only one thread at a time can own an object&#39;s monitor.
Throws:
IllegalMonitorStateException \u2013 if the current thread is not the owner of this object&#39;s monitor.
See Also:
notifyAll(), wait()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5927\u81F4\u610F\u601D\u5C31\u662FT\u7EBF\u7A0B\u6267\u884Cnotify\u4E4B\u524D\u9700\u8981\u83B7\u5F97\u76D1\u89C6\u5668\u4E14\u6267\u884Cnotify\u968F\u673A\u9009\u4E00\u4E2Await\u7684\u7EBF\u7A0B\u5524\u9192\uFF0C\u5E76\u4E14\u53EA\u6709\u7B49\u5230T\u7EBF\u7A0B\u91CA\u653E\u76D1\u89C6\u5668\u540E\uFF0Cwait\u7684\u7EBF\u7A0B\u624D\u771F\u6B63\u88AB\u5524\u9192\uFF0C\u7136\u540E\u6709\u4E09\u79CD\u65B9\u5F0F\u53EF\u4EE5\u83B7\u53D6\u76D1\u89C6\u5668\uFF0C\u901A\u8FC7Synchronized\u52A0\u5728\u5B9E\u4F8B\u65B9\u6CD5\u4E0A\u3001\u5BF9\u8C61\u7684\u540C\u6B65\u8BED\u53E5\u4E0A\u3001\u7C7B\u7684\u9759\u6001\u65B9\u6CD5\u4E0A</p><h2 id="\u90A3\u4E48thread\u6709\u54EA\u4E9B\u7EBF\u7A0B\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u90A3\u4E48thread\u6709\u54EA\u4E9B\u7EBF\u7A0B\u64CD\u4F5C" aria-hidden="true">#</a> \u90A3\u4E48Thread\u6709\u54EA\u4E9B\u7EBF\u7A0B\u64CD\u4F5C</h2><h3 id="start" tabindex="-1"><a class="header-anchor" href="#start" aria-hidden="true">#</a> start</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * This method is not invoked for the main method thread or &quot;system&quot;
         * group threads created/set up by the VM. Any new functionality added
         * to this method in the future may have to also be added to the VM.
         *
         * A zero status value corresponds to state &quot;NEW&quot;.
         */</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>threadStatus <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalThreadStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">/* Notify the group that this thread is about to be started
         * so that it can be added to the group&#39;s list of threads
         * and the group&#39;s unstarted count can be decremented. */</span>
        group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">boolean</span> started <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">start0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            started <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>started<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    group<span class="token punctuation">.</span><span class="token function">threadStartFailed</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ignore<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">/* do nothing. If start0 threw a Throwable then
                  it will be passed up the call stack */</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">start0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            target<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\u4F1A\u5224\u65AD\u7EBF\u7A0B\u7684\u72B6\u6001\u662F\u5426\u4E3A0\uFF08\u4EE3\u8868NEW\uFF09\uFF0C\u5982\u679C\u662F\u5219\u629B\u5F02\u5E38</p><p>\u628A\u5F53\u524D\u7EBF\u7A0B\u6DFB\u52A0\u5230\u7EBF\u7A0B\u7EC4\u4E2D</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">ThreadGroup</span> g<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>destroyed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalThreadStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>groups <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                groups <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadGroup</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ngroups <span class="token operator">==</span> groups<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                groups <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>groups<span class="token punctuation">,</span> ngroups <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            groups<span class="token punctuation">[</span>ngroups<span class="token punctuation">]</span> <span class="token operator">=</span> g<span class="token punctuation">;</span>

            <span class="token comment">// This is done last so it doesn&#39;t matter in case the</span>
            <span class="token comment">// thread is killed</span>
            ngroups<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u8BF4\u4E00\u4E0BThreadGroup\u7684\u4F5C\u7528\uFF1AThreadGroup\u662F\u7528\u6765\u7BA1\u7406\u4E00\u7EC4\u7EBF\u7A0B\u7684\uFF0C\u53EF\u4EE5\u63A7\u5236\u7EBF\u7A0B\u7684\u6267\u884C\uFF0C\u67E5\u770B\u7EBF\u7A0B\u7684\u6267\u884C\u72B6\u6001\u7B49\u64CD\u4F5C\uFF0C\u65B9\u4FBF\u5BF9\u4E8E\u4E00\u7EC4\u7EBF\u7A0B\u7684\u7EDF\u4E00\u7BA1\u7406\u3002</p><p>\u8BBE\u7F6E\u6807\u5FD7\u4F4D\uFF0C\u7EBF\u7A0B\u662F\u5426\u521B\u5EFA\u6210\u529F</p><p>\u6267\u884Cstart(0);\u8FD9\u4E2A\u624D\u662F\u672C\u5730\u65B9\u6CD5\uFF0C\u4E5F\u5C31\u662F\u65B0\u5EFA\u4E86\u4E2A\u5C31\u7EEA\u72B6\u6001\u7684\u7EBF\u7A0B\u53BB\u6267\u884Crun\u65B9\u6CD5\u91CC\u7684\u5185\u5BB9</p><h3 id="suspend\u548Cresume" tabindex="-1"><a class="header-anchor" href="#suspend\u548Cresume" aria-hidden="true">#</a> suspend\u548Cresume</h3><p>Thread\u7C7B\u4E2D\u8FD8\u67092\u4E2A\u65B9\u6CD5\uFF0C\u5373<strong>\u7EBF\u7A0B\u6302\u8D77(suspend)\u548C\u7EE7\u7EED\u6267\u884C(resume)</strong>\uFF0C\u8FD92\u4E2A\u64CD\u4F5C\u662F\u4E00\u5BF9\u76F8\u53CD\u7684\u64CD\u4F5C\uFF0C\u88AB\u6302\u8D77\u7684\u7EBF\u7A0B\uFF0C\u5FC5\u987B\u8981\u7B49\u5230resume()\u65B9\u6CD5\u64CD\u4F5C\u540E\uFF0C\u624D\u80FD\u7EE7\u7EED\u6267\u884C\u3002\u7CFB\u7EDF\u4E2D\u5DF2\u7ECF\u6807\u6CE8\u77402\u4E2A\u65B9\u6CD5\u8FC7\u65F6\u4E86\uFF0C\u4E0D\u63A8\u8350\u4F7F\u7528\u3002</p><p><strong>\u7CFB\u7EDF\u4E0D\u63A8\u8350\u4F7F\u7528suspend()\u65B9\u6CD5\u53BB\u6302\u8D77\u7EBF\u7A0B\u662F\u56E0\u4E3Asuspend()\u65B9\u6CD5\u5BFC\u81F4\u7EBF\u7A0B\u6682\u505C\u7684\u540C\u65F6\uFF0C\u5E76\u4E0D\u4F1A\u91CA\u653E\u4EFB\u4F55\u9501\u8D44\u6E90\u3002\u6B64\u65F6\uFF0C\u5176\u4ED6\u4EFB\u4F55\u7EBF\u7A0B\u60F3\u8981\u8BBF\u95EE\u88AB\u5B83\u5360\u7528\u7684\u9501\u65F6\uFF0C\u90FD\u4F1A\u88AB\u7275\u8FDE\uFF0C\u5BFC\u81F4\u65E0\u6CD5\u6B63\u5E38\u8FD0\u884C\u76F4\u5230\u5728\u5BF9\u5E94\u7684\u7EBF\u7A0B\u4E0A\u8FDB\u884C\u4E86resume()\u65B9\u6CD5\u64CD\u4F5C\uFF0C\u88AB\u6302\u8D77\u7684\u7EBF\u7A0B\u624D\u80FD\u7EE7\u7EED\uFF0C\u4ECE\u800C\u5176\u4ED6\u6240\u6709\u963B\u585E\u5728\u76F8\u5173\u9501\u4E0A\u7684\u7EBF\u7A0B\u4E5F\u53EF\u4EE5\u7EE7\u7EED\u6267\u884C\u3002\u4F46\u662F\uFF0C\u5982\u679Cresume()\u65B9\u6CD5\u64CD\u4F5C\u610F\u5916\u5730\u5728suspend()\u65B9\u6CD5\u524D\u5C31\u88AB\u6267\u884C\u4E86\uFF0C\u90A3\u4E48\u88AB\u6302\u8D77\u7684\u7EBF\u7A0B\u53EF\u80FD\u5F88\u96BE\u6709\u673A\u4F1A\u88AB\u7EE7\u7EED\u6267\u884C\u4E86\u3002\u5E76\u4E14\uFF0C\u66F4\u4E25\u91CD\u7684\u662F\uFF1A\u5B83\u6240\u5360\u7528\u7684\u9501\u4E0D\u4F1A\u88AB\u91CA\u653E\uFF0C\u56E0\u6B64\u53EF\u80FD\u4F1A\u5BFC\u81F4\u6574\u4E2A\u7CFB\u7EDF\u5DE5\u4F5C\u4E0D\u6B63\u5E38\u3002\u800C\u4E14\uFF0C\u5BF9\u4E8E\u88AB\u6302\u8D77\u7684\u7EBF\u7A0B\uFF0C\u4ECE\u5B83\u7EBF\u7A0B\u7684\u72B6\u6001\u4E0A\u770B\uFF0C\u5C45\u7136\u8FD8\u662FRunnable\u72B6\u6001\uFF0C\u8FD9\u4E5F\u4F1A\u5F71\u54CD\u6211\u4EEC\u961F\u7CFB\u7EDF\u5F53\u524D\u72B6\u6001\u7684\u5224\u65AD</strong>\u3002</p><h3 id="join" tabindex="-1"><a class="header-anchor" href="#join" aria-hidden="true">#</a> join</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token function">join</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

 <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">join</span><span class="token punctuation">(</span><span class="token keyword">long</span> millis<span class="token punctuation">,</span> <span class="token keyword">int</span> nanos<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>millis <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;timeout value is negative&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>nanos <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> nanos <span class="token operator">&gt;</span> <span class="token number">999999</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span>
                                <span class="token string">&quot;nanosecond timeout value out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>nanos <span class="token operator">&gt;=</span> <span class="token number">500000</span> <span class="token operator">||</span> <span class="token punctuation">(</span>nanos <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> millis <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            millis<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">join</span><span class="token punctuation">(</span>millis<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">join</span><span class="token punctuation">(</span><span class="token keyword">long</span> millis<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> base <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> now <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>millis <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;timeout value is negative&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>millis <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">isAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">wait</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">isAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">long</span> delay <span class="token operator">=</span> millis <span class="token operator">-</span> now<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>delay <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token function">wait</span><span class="token punctuation">(</span>delay<span class="token punctuation">)</span><span class="token punctuation">;</span>
                now <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> base<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u4E86\u770B\u6E90\u7801\u540E\uFF0C\u5927\u81F4\u53EF\u4EE5\u77E5\u9053\u4E86\u91CD\u70B9\u662Fjoin(long mills)\u8FD9\u4E2A\u65B9\u6CD5\u4E86\uFF0C\u6709\u8DA3\u7684\u662F\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u662F\u57FA\u4E8EObject\u7684wait\u65B9\u6CD5</p><p>\u6210\u5458\u65B9\u6CD5\u52A0\u4E86synchronized\u8BF4\u660E\u662Fsynchronized(this)\uFF0Cthis\u662F\u8C01\u554A\uFF1Fthis\u5C31\u662FthreadA\u5B50\u7EBF\u7A0B\u5BF9\u8C61\u672C\u8EAB\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E3B\u7EBF\u7A0B\u6301\u6709\u4E86threadA\u8FD9\u4E2A\u5BF9\u8C61\u7684\u9501\u3002\u5F53\u5B50\u7EBF\u7A0BthreadA\u6267\u884C\u5B8C\u6BD5\u7684\u65F6\u5019\uFF0Cjvm\u4F1A\u81EA\u52A8\u5524\u9192\u963B\u585E\u5728threadA\u5BF9\u8C61\u4E0A\u7684\u7EBF\u7A0B\uFF0C\u5728\u6211\u4EEC\u7684\u4F8B\u5B50\u4E2D\u4E5F\u5C31\u662F\u4E3B\u7EBF\u7A0B\u3002</p><p>t.join()\u65B9\u6CD5\u963B\u585E\u8C03\u7528\u6B64\u65B9\u6CD5\u7684\u7EBF\u7A0B(calling thread)\uFF0C\u76F4\u5230\u7EBF\u7A0Bt\u5B8C\u6210\uFF0C\u6B64\u7EBF\u7A0B\u518D\u7EE7\u7EED\uFF1B\u901A\u5E38\u7528\u4E8E\u5728main()\u4E3B\u7EBF\u7A0B\u5185\uFF0C\u7B49\u5F85\u5176\u5B83\u7EBF\u7A0B\u5B8C\u6210\u518D\u7ED3\u675Fmain()\u4E3B\u7EBF\u7A0B\u3002</p><h3 id="yield" tabindex="-1"><a class="header-anchor" href="#yield" aria-hidden="true">#</a> yield</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u662F\u4E2A\u672C\u5730\u65B9\u6CD5\uFF0C\u770B\u770B\u6CE8\u91CA</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>A hint to the scheduler that the current thread is willing to yield its current use of a processor. The scheduler is free to ignore this hint.
Yield is a heuristic attempt to improve relative progression between threads that would otherwise over-utilise a CPU. Its use should be combined with detailed profiling and benchmarking to ensure that it actually has the desired effect.
It is rarely appropriate to use this method. It may be useful for debugging or testing purposes, where it may help to reproduce bugs due to race conditions. It may also be useful when designing concurrency control constructs such as the ones in the java.util.concurrent.locks package.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5927\u81F4\u610F\u601D\u5C31\u662F\u8BA9\u51FA\u5904\u7406\u5668\u6743\u9650\uFF0C\u53EF\u4EE5\u6539\u5584\u54EA\u4E9B\u8FC7\u6E21\u4F7F\u7528CPU\u7684\u7EBF\u7A0B\uFF0C\u8BF4\u4EBA\u8BDD\u5C31\u662F\u60F3\u516C\u5E73\u4E9B</p><h3 id="sleep" tabindex="-1"><a class="header-anchor" href="#sleep" aria-hidden="true">#</a> sleep</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token keyword">long</span> millis<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u662F\u4E2Anative method\uFF0C\u53EF\u4EE5\u629B\u51FA\u4E2D\u65AD\u5F02\u5E38</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Causes the currently executing thread to sleep (temporarily cease execution) for the specified number of milliseconds, subject to the precision and accuracy of system timers and schedulers. The thread does not lose ownership of any monitors.
Params:
millis \u2013 the length of time to sleep in milliseconds
Throws:
IllegalArgumentException \u2013 if the value of millis is negative
InterruptedException \u2013 if any thread has interrupted the current thread. The interrupted status of the current thread is cleared when this exception is thrown.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C31\u662F\u4F7F\u5F97\u7EBF\u7A0B\u6C89\u7761\u4E00\u6BB5\u6307\u5B9A\u65F6\u95F4\uFF0C\u671F\u95F4\u662F\u53EF\u4EE5\u88AB\u4E2D\u65AD\u7684\u5982\u679C\u8BBE\u7F6E\u4E2D\u65AD\u6807\u8BB0\u4E3Atrue\u7684\u8BDD\uFF0C\u629B\u51FA\u4E2D\u65AD\u5F02\u5E38\u540E\uFF0C\u6807\u5FD7\u4F4D\u6062\u590D</p><h3 id="interrupt" tabindex="-1"><a class="header-anchor" href="#interrupt" aria-hidden="true">#</a> interrupt</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">!=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">checkAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>blockerLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Interruptible</span> b <span class="token operator">=</span> blocker<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">interrupt0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// Just to set the interrupt flag</span>
                b<span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token function">interrupt0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">interrupt0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6765\u770B\u770B\u6CE8\u91CA</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Interrupts this thread.
Unless the current thread is interrupting itself, which is always permitted, the checkAccess method of this thread is invoked, which may cause a SecurityException to be thrown.
If this thread is blocked in an invocation of the wait(), wait(long), or wait(long, int) methods of the Object class, or of the join(), join(long), join(long, int), sleep(long), or sleep(long, int), methods of this class, then its interrupt status will be cleared and it will receive an InterruptedException.
If this thread is blocked in an I/O operation upon an InterruptibleChannel then the channel will be closed, the thread&#39;s interrupt status will be set, and the thread will receive a java.nio.channels.ClosedByInterruptException.
If this thread is blocked in a java.nio.channels.Selector then the thread&#39;s interrupt status will be set and it will return immediately from the selection operation, possibly with a non-zero value, just as if the selector&#39;s wakeup method were invoked.
If none of the previous conditions hold then this thread&#39;s interrupt status will be set.
Interrupting a thread that is not alive need not have any effect.
Throws:
SecurityException \u2013 if the current thread cannot modify this thread
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5927\u81F4\u610F\u601D\u5C31\u662F\uFF1A</p><ol><li>\u5148\u68C0\u67E5\u8C03\u7528\u6B64\u65B9\u6CD5\u7684\u5BF9\u8C61\u662F\u5426\u4E3A\u5F53\u524D\u7EBF\u7A0B\uFF0C\u5982\u679C\u4E0D\u662F\u7684\u8BDD\u5C31\u8981\u68C0\u67E5\uFF0C\u7136\u540E\u629B\u51FA\u5B89\u5168\u5F02\u5E38</li><li>\u5982\u679C\u8FD9\u4E2A\u7EBF\u7A0B\u5728\u8C03\u7528Object\u7C7B\u7684wait()\u3001wait(long)\u6216wait(long, int)\u65B9\u6CD5\uFF0C\u6216\u8BE5\u7C7B\u7684join()\u3001join(long)\u3001join(long, int)\u3001sleep(long)\u6216sleep(long, int)\u65B9\u6CD5\u65F6\u88AB\u963B\u585E\uFF0C\u90A3\u4E48\u5B83\u7684\u4E2D\u65AD\u72B6\u6001\u5C06\u88AB\u6E05\u9664\uFF0C\u5E76\u5C06\u63A5\u6536InterruptedException\u3002</li><li>\u5982\u679C\u8BE5\u7EBF\u7A0B\u5728InterruptibleChannel\u4E0A\u7684I/O\u64CD\u4F5C\u4E2D\u88AB\u963B\u585E\uFF0C\u90A3\u4E48\u8BE5\u901A\u9053\u5C06\u88AB\u5173\u95ED\uFF0C\u7EBF\u7A0B\u7684\u4E2D\u65AD\u72B6\u6001\u5C06\u88AB\u8BBE\u7F6E\uFF0C\u5E76\u4E14\u8BE5\u7EBF\u7A0B\u5C06\u6536\u5230java.nio.channels.ClosedByInterruptException\u3002</li><li>\u5982\u679C\u8FD9\u4E2A\u7EBF\u7A0B\u5728java.nio.channels.Selector\u4E2D\u88AB\u963B\u585E\uFF0C\u90A3\u4E48\u7EBF\u7A0B\u7684\u4E2D\u65AD\u72B6\u6001\u5C06\u88AB\u8BBE\u7F6E\uFF0C\u5E76\u4E14\u5B83\u5C06\u7ACB\u5373\u4ECE\u9009\u62E9\u64CD\u4F5C\u8FD4\u56DE\uFF0C\u53EF\u80FD\u8FD4\u56DE\u4E00\u4E2A\u975E\u96F6\u503C\uFF0C\u5C31\u50CF\u8C03\u7528\u4E86\u9009\u62E9\u5668\u7684\u5524\u9192\u65B9\u6CD5\u4E00\u6837\u3002</li><li>\u5982\u679C\u524D\u9762\u7684\u6761\u4EF6\u90FD\u4E0D\u6EE1\u8DB3\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u7EBF\u7A0B\u7684\u4E2D\u65AD\u72B6\u6001\u5C06\u88AB\u8BBE\u7F6E\u3002</li></ol><h3 id="isinterrupt" tabindex="-1"><a class="header-anchor" href="#isinterrupt" aria-hidden="true">#</a> isinterrupt</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

 <span class="token keyword">private</span> <span class="token keyword">native</span> <span class="token keyword">boolean</span> <span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> <span class="token class-name">ClearInterrupted</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u91CD\u8F7D\u4E86\u4E00\u4E2Anative method\uFF0C\u4F20\u8FDB\u53C2\u6570\u4E3Afalse\uFF0C\u90A3\u4E48\u4E0D\u6E05\u695A\u6807\u8BB0\u4F4D</p><p>\u5355\u7EAF\u60F3\u77E5\u9053\u662F\u5426\u8BBE\u7F6E\u4E2D\u65AD\u6807\u8BB0\u4F4Dtrue</p><h3 id="interrupted" tabindex="-1"><a class="header-anchor" href="#interrupted" aria-hidden="true">#</a> interrupted</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F88\u660E\u663E\uFF0C\u8C03\u7528\u4E86native method\u67E5\u8BE2\u662F\u5426\u4E2D\u65AD\u4E14\u6E05\u7406\u4E2D\u65AD\u6807\u5FD7\u4F4D\uFF0C\u4E5F\u5C31\u662F\u91CD\u7F6E\u4E3Afalse</p><h2 id="\u7528\u6237\u7EBF\u7A0B\u548C\u5B88\u62A4\u7EBF\u7A0B\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u7528\u6237\u7EBF\u7A0B\u548C\u5B88\u62A4\u7EBF\u7A0B\u7684\u533A\u522B" aria-hidden="true">#</a> \u7528\u6237\u7EBF\u7A0B\u548C\u5B88\u62A4\u7EBF\u7A0B\u7684\u533A\u522B</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">setDaemon</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> on<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">checkAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalThreadStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        daemon <span class="token operator">=</span> on<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>java\u4E2D\u7684\u7EBF\u7A0B\u5206\u4E3A<strong>\u7528\u6237\u7EBF\u7A0B</strong>\u548C<strong>\u5B88\u62A4\u7EBF\u7A0B</strong></li><li>\u7A0B\u5E8F\u4E2D\u7684\u6240\u6709\u7684\u7528\u6237\u7EBF\u7A0B\u7ED3\u675F\u4E4B\u540E\uFF0C\u4E0D\u7BA1\u5B88\u62A4\u7EBF\u7A0B\u5904\u4E8E\u4EC0\u4E48\u72B6\u6001\uFF0Cjava\u865A\u62DF\u673A\u90FD\u4F1A\u81EA\u52A8\u9000\u51FA</li><li>\u8C03\u7528\u7EBF\u7A0B\u7684\u5B9E\u4F8B\u65B9\u6CD5setDaemon()\u6765\u8BBE\u7F6E\u7EBF\u7A0B\u662F\u5426\u662F\u5B88\u62A4\u7EBF\u7A0B</li><li>setDaemon()\u65B9\u6CD5\u5FC5\u987B\u5728\u7EBF\u7A0B\u7684start()\u65B9\u6CD5\u4E4B\u524D\u8C03\u7528\uFF0C\u5728\u540E\u9762\u8C03\u7528\u4F1A\u62A5\u5F02\u5E38\uFF0C\u5E76\u4E14\u4E0D\u8D77\u6548</li><li>\u7EBF\u7A0B\u7684daemon\u9ED8\u8BA4\u503C\u548C\u5176\u7236\u7EBF\u7A0B\u4E00\u6837</li></ol><h2 id="\u804A\u4E00\u804A\u7EBF\u7A0B\u4E2D\u65AD" tabindex="-1"><a class="header-anchor" href="#\u804A\u4E00\u804A\u7EBF\u7A0B\u4E2D\u65AD" aria-hidden="true">#</a> \u804A\u4E00\u804A\u7EBF\u7A0B\u4E2D\u65AD</h2><h3 id="_1-\u8C03\u7528thread-stop" tabindex="-1"><a class="header-anchor" href="#_1-\u8C03\u7528thread-stop" aria-hidden="true">#</a> 1.\u8C03\u7528Thread.stop()</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token annotation punctuation">@Deprecated</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SecurityManager</span> security <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>security <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">checkAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">!=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                security<span class="token punctuation">.</span><span class="token function">checkPermission</span><span class="token punctuation">(</span><span class="token class-name">SecurityConstants</span><span class="token punctuation">.</span><span class="token constant">STOP_THREAD_PERMISSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// A zero status value corresponds to &quot;NEW&quot;, it can&#39;t change to</span>
        <span class="token comment">// not-NEW because we hold the lock.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>threadStatus <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Wake up thread if it was suspended; no-op otherwise</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// The VM can handle all thread states</span>
        <span class="token function">stop0</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThreadDeath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">stop0</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>stop()\u65B9\u6CD5\u662F\u53EF\u4EE5\u76F4\u63A5\u8BA9\u7EBF\u7A0B\u505C\u6B62\u8FD0\u884C\uFF0C\u4F46\u4E5F\u540C\u6837\u5B58\u5728\u81F4\u547D\u7684\u7F3A\u70B9\uFF0C\u5B83\u7684\u76F4\u63A5\u4E2D\u65AD\u65B9\u5F0F\uFF0C\u5E76\u6CA1\u6709\u8BA9\u7EBF\u7A0B\u7559\u4E0B\u5B58\u50A8\u6570\u636E\u7684\u65F6\u95F4\uFF0C\u8FD9\u4E5F\u6781\u5BB9\u6613\u5BFC\u81F4\u7EBF\u7A0B\u7684\u6570\u636E\u4E22\u5931\u6216\u4E0D\u4E00\u81F4\u6027\u7684\u95EE\u9898\u3002\u4EE5\u4E0B\u4ECB\u7ECDInterrupt\uFF08\uFF09\u65B9\u6CD5</p><h3 id="_2-\u8BBE\u7F6E\u4E2D\u65AD\u6807\u5FD7\u4F4Dinterrupt" tabindex="-1"><a class="header-anchor" href="#_2-\u8BBE\u7F6E\u4E2D\u65AD\u6807\u5FD7\u4F4Dinterrupt" aria-hidden="true">#</a> 2.\u8BBE\u7F6E\u4E2D\u65AD\u6807\u5FD7\u4F4Dinterrupt</h3><p>\u7EBF\u7A0B\u8BBE\u7F6E\u4E2D\u65AD\u6807\u5FD7\u4F4D\u7684\u597D\u5904</p><ul><li>\u5982\u679C\u6B64\u7EBF\u7A0B\u5904\u4E8E\u963B\u585E\u72B6\u6001(\u6BD4\u5982\u8C03\u7528\u4E86wait\u65B9\u6CD5\uFF0Cio\u7B49\u5F85)\uFF0C\u5219\u4F1A\u7ACB\u9A6C\u9000\u51FA\u963B\u585E\uFF0C\u5E76\u629B\u51FAInterruptedException\u5F02\u5E38\uFF0C\u7EBF\u7A0B\u5C31\u53EF\u4EE5\u901A\u8FC7\u6355\u83B7InterruptedException\u6765\u505A\u4E00\u5B9A\u7684\u5904\u7406\uFF0C\u7136\u540E\u8BA9\u7EBF\u7A0B\u9000\u51FA\u3002</li><li>\u5982\u679C\u6B64\u7EBF\u7A0B\u6B63\u5904\u4E8E\u8FD0\u884C\u4E4B\u4E2D\uFF0C\u5219\u7EBF\u7A0B\u4E0D\u53D7\u4EFB\u4F55\u5F71\u54CD\uFF0C\u7EE7\u7EED\u8FD0\u884C\uFF0C\u4EC5\u4EC5\u662F\u7EBF\u7A0B\u7684\u4E2D\u65AD\u6807\u8BB0\u88AB\u8BBE\u7F6E\u4E3Atrue\u3002\u6240\u4EE5\u7EBF\u7A0B\u8981\u5728\u9002\u5F53\u7684\u4F4D\u7F6E\u901A\u8FC7\u8C03\u7528isInterrupted\u65B9\u6CD5\u6765\u67E5\u770B\u81EA\u5DF1\u662F\u5426\u88AB\u4E2D\u65AD\uFF0C\u5E76\u505A\u9000\u51FA\u64CD\u4F5C\u3002</li></ul><h3 id="_3-\u81EA\u5B9A\u4E49\u4E2D\u65AD\u6807\u5FD7\u4F4D" tabindex="-1"><a class="header-anchor" href="#_3-\u81EA\u5B9A\u4E49\u4E2D\u65AD\u6807\u5FD7\u4F4D" aria-hidden="true">#</a> 3.\u81EA\u5B9A\u4E49\u4E2D\u65AD\u6807\u5FD7\u4F4D</h3><p>\u5728\u7EBF\u7A0B\u7C7B\u5F53\u4E2D\u6DFB\u52A0\u6807\u5FD7\u4F4Drun\uFF0C\u5F53\u6807\u5FD7\u4F4Drun\u4E3Atrue\u65F6\uFF0C\u7EBF\u7A0B\u7EE7\u7EED\u6267\u884C\uFF0C\u53CD\u4E4B\u5219\u8FDB\u884C\u4E2D\u65AD\u5904\u7406\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;---&gt;&quot;</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        thread<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u79CD\u60C5\u51B5\u4E0D\u592A\u4F18\u96C5\uFF0C\u7EBF\u7A0B\u7684\u5173\u95ED\u7531\u8C03\u7528\u8005\u51B3\u5B9A\u7684\uFF0C\u8981\u662F\u963B\u585E\u4E4B\u7C7B\u7684\u60C5\u51B5\u5C31\u4E0D\u80FD\u8D77\u5230\u4E2D\u65AD\u7684\u4F5C\u7528\u4E86</p><h2 id="threadlocal\u5E94\u7528\u573A\u666F\u548C\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#threadlocal\u5E94\u7528\u573A\u666F\u548C\u539F\u7406" aria-hidden="true">#</a> ThreadLocal\u5E94\u7528\u573A\u666F\u548C\u539F\u7406</h2><h3 id="\u6E90\u7801\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u5206\u6790" aria-hidden="true">#</a> \u6E90\u7801\u5206\u6790</h3><p>\u6BCF\u4E2AThread\u90FD\u6709\u4E2ATheadLocalMap\u7684\u53D8\u91CFthreadLocals</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">/* ThreadLocal values pertaining to this thread. This map is maintained
     * by the ThreadLocal class. */</span>
    <span class="token class-name">ThreadLocal<span class="token punctuation">.</span>ThreadLocalMap</span> threadLocals <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6765\u770B\u770BThreadLocal\u7684set\u65B9\u6CD5</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
    <span class="token doc-comment comment">/**
     * Sets the current thread&#39;s copy of this thread-local variable
     * to the specified value.  Most subclasses will have no need to
     * override this method, relying solely on the <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">initialValue</span></span><span class="token punctuation">}</span>
     * method to set the values of thread-locals.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">value</span> the value to be stored in the current thread&#39;s copy of
     *        this thread-local.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">T</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ThreadLocalMap</span> map <span class="token operator">=</span> <span class="token function">getMap</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>map <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            <span class="token function">createMap</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">ThreadLocalMap</span> <span class="token function">getMap</span><span class="token punctuation">(</span><span class="token class-name">Thread</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> t<span class="token punctuation">.</span>threadLocals<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

   <span class="token keyword">void</span> <span class="token function">createMap</span><span class="token punctuation">(</span><span class="token class-name">Thread</span> t<span class="token punctuation">,</span> <span class="token class-name">T</span> firstValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        t<span class="token punctuation">.</span>threadLocals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocalMap</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> firstValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u76F8\u5F53\u4E8E\u5728\u7EBF\u7A0B\u4E2D\u5B58\u50A8\u4E86\u4E2A\u4EE5\u5F53\u524DHashLocal\u4E3Akey\u7684HashLocalMap</p><p><strong>\u6765\u770B\u770Bget\u65B9\u6CD5</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ThreadLocalMap</span> map <span class="token operator">=</span> <span class="token function">getMap</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>map <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">ThreadLocalMap<span class="token punctuation">.</span>Entry</span> e <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">getEntry</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
                <span class="token class-name">T</span> result <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span>e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
                <span class="token keyword">return</span> result<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">setInitialValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">T</span> <span class="token function">setInitialValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">T</span> value <span class="token operator">=</span> <span class="token function">initialValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ThreadLocalMap</span> map <span class="token operator">=</span> <span class="token function">getMap</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>map <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            <span class="token function">createMap</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

   <span class="token keyword">protected</span> <span class="token class-name">T</span> <span class="token function">initialValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u83B7\u53D6\u503C\u5176\u5B9E\u662F\u83B7\u53D6\u5F53\u524D\u7EBF\u7A0B\u7684threadLocals\uFF0C\u7136\u540E\u83B7\u53D6\u503C\uFF0C\u5982\u679C\u503C\uFF0C\u4F46\u662F\u5982\u679C\u8FD9\u4E2AthreadLocals\u4E3A\u7A7A\u7684\u8BDD\uFF0C\u5C31\u5E2E\u4F60\u521D\u59CB\u5316\u4E00\u4E2Akey\u4E3Athis\uFF0C\u503C\u4E3A\u7A7A\u7684ThreadLocalMap</p><p><strong>\u6765\u770B\u770Bremove</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token class-name">ThreadLocalMap</span> m <span class="token operator">=</span> <span class="token function">getMap</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
             m<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u79FB\u9664\u4EE5\u8FD9\u4E2AThreadLocal\u4E3Akey\u7684\u503C\uFF0C\u6CE8\u610FThreadLocalMap\u8FD8\u5728\u7684\uFF0C\u53EA\u662F\u91CC\u9762\u6CA1\u6709\u503C</p><p><strong>\u6765\u770B\u770B\u9759\u6001\u5185\u90E8\u7C7BThreadLocalMap</strong></p><p><strong>\u6709\u4E2A\u9759\u6001\u5185\u90E8\u7C7BEntry</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>        <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Entry</span> <span class="token keyword">extends</span> <span class="token class-name">WeakReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ThreadLocal</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
            <span class="token doc-comment comment">/** The value associated with this ThreadLocal. */</span>
            <span class="token class-name">Object</span> value<span class="token punctuation">;</span>

            <span class="token class-name">Entry</span><span class="token punctuation">(</span><span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> k<span class="token punctuation">,</span> <span class="token class-name">Object</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">super</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>
                value <span class="token operator">=</span> v<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2AEntry\u7EE7\u627F\u4E86\u5F31\u5F15\u7528\uFF0C\u7136\u540E\u8BBE\u7F6E\u4E3A\u5F31\u5F15\u7528\u7684\u662FThreadLocal\u8FD9\u4E2Akey\uFF0C\u8FD9\u5C31\u6709\u610F\u601D\u4E86\uFF0C\u60F3\u4E00\u60F3\u4E3A\u4EC0\u4E48\u8981\u8FD9\u4E48\u505A\uFF0C\u5F31\u5F15\u7528\u7684\u6548\u679C\u5C31\u662F\u5F53\u53D1\u9001GC\u65F6\u4E00\u5B9A\u4F1A\u5F53\u4F5C\u5783\u573E\u56DE\u6536\u6389\u7684\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u4FDD\u5B58\u5728Thread\u4E2DthreadLocals\u4E2D\u7684Entry\u7684\u58F0\u660E\u5468\u671F\u5C31\u5728GC\u4E4B\u524D\uFF0C\u4F46\u662F\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u7528\u5B8C\u6700\u597D\u5C31remove\u6389\uFF0C\u8FD9\u6837\u53EF\u4EE5\u907F\u514D\u5185\u5B58\u6CC4\u6F0F\uFF0C\u5F53\u7136\uFF0C\u4F60\u4E0D\u8FD9\u4E48\u5E72\u7684\u8BDDJVM\u4E5F\u4F1AGC\u7684\u65F6\u5019\u5E2E\u4F60\u56DE\u6536\uFF0C\u53EA\u662F\u8FD9\u6BB5\u65F6\u95F4\u5185\u8981\u5185\u5B58\u6CC4\u6F0F\u4E86\uFF0C\u4F46\u662F\u5427\u5982\u679Cvalue\u662F\u5F3A\u5F15\u7528\u7684\u8BDD\uFF0C\u5C31\u4E0D\u4F1A\u88ABGC\u56DE\u6536\uFF0C\u9020\u6210key==null\uFF0Cvalue\u5B58\u5728\u7684\u60C5\u51B5\uFF0C\u6240\u4EE5\u6700\u597D\u8FD8\u662Fremove\u5427</p><p><strong>ThreadLocalMap\u5982\u4F55\u5904\u7406Hash\u51B2\u7A81</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> key<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token comment">// We don&#39;t use a fast path as with get() because it is at</span>
            <span class="token comment">// least as common to use set() to create new entries as</span>
            <span class="token comment">// it is to replace existing ones, in which case, a fast</span>
            <span class="token comment">// path would fail more often than not.</span>

            <span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab <span class="token operator">=</span> table<span class="token punctuation">;</span>
            <span class="token keyword">int</span> len <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> key<span class="token punctuation">.</span>threadLocalHashCode <span class="token operator">&amp;</span> <span class="token punctuation">(</span>len<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span> e <span class="token operator">=</span> tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                 e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                 e <span class="token operator">=</span> tab<span class="token punctuation">[</span>i <span class="token operator">=</span> <span class="token function">nextIndex</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> k <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">==</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">replaceStaleEntry</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Entry</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> sz <span class="token operator">=</span> <span class="token operator">++</span>size<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">cleanSomeSlots</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> sz<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> sz <span class="token operator">&gt;=</span> threshold<span class="token punctuation">)</span>
                <span class="token function">rehash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">nextIndex</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token operator">?</span> i <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

      <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">rehash</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">expungeStaleEntries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Use lower threshold for doubling to avoid hysteresis</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;=</span> threshold <span class="token operator">-</span> threshold <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span>
                <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u5148\u662F\u83B7\u53D6hashcode\u7136\u540E\u53D6\u4F59\u83B7\u53D6\u5230\u7B2C\u4E00\u4E2A\u7D22\u5F15</li><li>\u904D\u5386table\uFF0C\u627E\u5230value\u76F8\u540C\u7684\u6216\u8005key\u4E3Anull\u7684\u4F4D\u7F6E</li><li>\u7136\u540E\u8D4B\u503C\u540E\u5224\u65AD\u662F\u5426\u9700\u8981\u6269\u5BB9\uFF0C\u6E90\u7801\u4E0A\u662F\u5927\u4E8E\u7B49\u4E8Ethreshold\u76843/4\u5C31\u8981\u6269\u5BB9\u4E86</li><li>\u8FD9\u4E2A\u65B9\u6CD5\u53EB\u5F00\u653E\u5B9A\u5740\u6CD5</li></ol><p><strong>ThreadLocalMap\u548CHashMap\u7684\u6269\u5BB9\u673A\u5236\u4E0D\u4E00\u6837\u7684</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> oldTab <span class="token operator">=</span> table<span class="token punctuation">;</span>
            <span class="token keyword">int</span> oldLen <span class="token operator">=</span> oldTab<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
            <span class="token keyword">int</span> newLen <span class="token operator">=</span> oldLen <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTab <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Entry</span><span class="token punctuation">[</span>newLen<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> oldLen<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Entry</span> e <span class="token operator">=</span> oldTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> k <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        e<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// Help the GC</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        <span class="token keyword">int</span> h <span class="token operator">=</span> k<span class="token punctuation">.</span>threadLocalHashCode <span class="token operator">&amp;</span> <span class="token punctuation">(</span>newLen <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">while</span> <span class="token punctuation">(</span>newTab<span class="token punctuation">[</span>h<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                            h <span class="token operator">=</span> <span class="token function">nextIndex</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> newLen<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        newTab<span class="token punctuation">[</span>h<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
                        count<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token function">setThreshold</span><span class="token punctuation">(</span>newLen<span class="token punctuation">)</span><span class="token punctuation">;</span>
            size <span class="token operator">=</span> count<span class="token punctuation">;</span>
            table <span class="token operator">=</span> newTab<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u8FD9\u91CC\u8981\u6CE8\u610F\u4E86\uFF0C\u6269\u5BB9\u662F\u539F\u6765\u7684\u4E24\u500D</li><li>\u6269\u5BB9\u7684\u65F6\u5019\u91CD\u65B0\u8BA1\u7B97\u4F4D\u7F6E\u8D4B\u503C</li></ul><p><strong>InheritableThreadLocal</strong></p><p>\u7236\u7EBF\u7A0B\u80FD\u7528ThreadLocal\u6765\u7ED9\u5B50\u7EBF\u7A0B\u4F20\u503C\u5417\uFF1F\u6BEB\u65E0\u7591\u95EE\uFF0C\u4E0D\u80FD\u3002\u90A3\u8BE5\u600E\u4E48\u529E\uFF1F \u8FD9\u65F6\u5019\u53EF\u4EE5\u7528\u5230\u53E6\u5916\u4E00\u4E2A\u7C7B\u2014\u2014 InheritableThreadLocal \u3002 \u4F7F\u7528\u8D77\u6765\u5F88\u7B80\u5355\uFF0C\u5728\u4E3B\u7EBF\u7A0B\u7684InheritableThreadLocal\u5B9E\u4F8B\u8BBE\u7F6E\u503C\uFF0C\u5728\u5B50\u7EBF\u7A0B\u4E2D\u5C31\u53EF\u4EE5 \u62FF\u5230\u4E86\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InheritableThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * Computes the child&#39;s initial value for this inheritable thread-local
     * variable as a function of the parent&#39;s value at the time the child
     * thread is created.  This method is called from within the parent
     * thread before the child is started.
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * This method merely returns its input argument, and should be overridden
     * if a different behavior is desired.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">parentValue</span> the parent thread&#39;s value
     * <span class="token keyword">@return</span> the child thread&#39;s initial value
     */</span>
    <span class="token keyword">protected</span> <span class="token class-name">T</span> <span class="token function">childValue</span><span class="token punctuation">(</span><span class="token class-name">T</span> parentValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> parentValue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Get the map associated with a ThreadLocal.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">t</span> the current thread
     */</span>
    <span class="token class-name">ThreadLocalMap</span> <span class="token function">getMap</span><span class="token punctuation">(</span><span class="token class-name">Thread</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> t<span class="token punctuation">.</span>inheritableThreadLocals<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Create the map associated with a ThreadLocal.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">t</span> the current thread
     * <span class="token keyword">@param</span> <span class="token parameter">firstValue</span> value for the initial entry of the table.
     */</span>
    <span class="token keyword">void</span> <span class="token function">createMap</span><span class="token punctuation">(</span><span class="token class-name">Thread</span> t<span class="token punctuation">,</span> <span class="token class-name">T</span> firstValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        t<span class="token punctuation">.</span>inheritableThreadLocals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocalMap</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> firstValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728Thread\u8FD8\u6709\u4E2A\u8FD9\u6837\u7684\u53D8\u91CF</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">/*
     * InheritableThreadLocal values pertaining to this thread. This map is
     * maintained by the InheritableThreadLocal class.
     */</span>
    <span class="token class-name">ThreadLocal<span class="token punctuation">.</span>ThreadLocalMap</span> inheritableThreadLocals <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90A3\u4E48\u662F\u5982\u4F55\u8FDB\u884C\u7236\u5B50\u7EBF\u7A0B\u4FE1\u606F\u4F20\u9012\u5462\uFF1F\u6765\u770BThread\u6709\u4E2Ainit\u65B9\u6CD5\u7684\u4E00\u6BB5\u4EE3\u7801</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>inheritThreadLocals <span class="token operator">&amp;&amp;</span> parent<span class="token punctuation">.</span>inheritableThreadLocals <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>inheritableThreadLocals <span class="token operator">=</span>
                <span class="token class-name">ThreadLocal</span><span class="token punctuation">.</span><span class="token function">createInheritedMap</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span>inheritableThreadLocals<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u7236\u7EBF\u7A0B\u5B58\u5728inheritableLocals\u7684\u8BDD\uFF0C\u5B50\u7EBF\u7A0B\u4E5F\u6839\u636E\u7236\u7EBF\u7A0B\u7684\u53D8\u91CF\u751F\u6210\u4E00\u4E2A\uFF0C\u6CE8\u610F\uFF0C\u662F\u751F\u6210\uFF0C\u4E5F\u5C31\u662F\u8BF4\u53EF\u4EE5\u5B8C\u5168\u548C\u7236\u7EBF\u7A0B\u4E00\u81F4\uFF0C\u4E5F\u53EF\u4EE5\u6709\u4E9B\u533A\u522B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token keyword">static</span> <span class="token class-name">ThreadLocalMap</span> <span class="token function">createInheritedMap</span><span class="token punctuation">(</span><span class="token class-name">ThreadLocalMap</span> parentMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocalMap</span><span class="token punctuation">(</span>parentMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

 <span class="token keyword">private</span> <span class="token class-name">ThreadLocalMap</span><span class="token punctuation">(</span><span class="token class-name">ThreadLocalMap</span> parentMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> parentTable <span class="token operator">=</span> parentMap<span class="token punctuation">.</span>table<span class="token punctuation">;</span>
            <span class="token keyword">int</span> len <span class="token operator">=</span> parentTable<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
            <span class="token function">setThreshold</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>
            table <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Entry</span><span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Entry</span> e <span class="token operator">=</span> parentTable<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
                    <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> key <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Object</span> value <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">childValue</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">Entry</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Entry</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">int</span> h <span class="token operator">=</span> key<span class="token punctuation">.</span>threadLocalHashCode <span class="token operator">&amp;</span> <span class="token punctuation">(</span>len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">while</span> <span class="token punctuation">(</span>table<span class="token punctuation">[</span>h<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                            h <span class="token operator">=</span> <span class="token function">nextIndex</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        table<span class="token punctuation">[</span>h<span class="token punctuation">]</span> <span class="token operator">=</span> c<span class="token punctuation">;</span>
                        size<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u4E86\u8FD9\u4E00\u6B65\uFF0C\u5C31\u77E5\u9053\u4E86\u4F1A\u628A\u7236\u7EBF\u7A0B\u7684\u53D8\u91CF\u91CC\u7684\u975E\u7A7AEntry\u7ED9\u590D\u5236\u4E0B\u6765\uFF0C\u5E76\u4E14\u91CD\u5199\u8BA1\u7B97\u4F4D\u7F6E\u3002</p><p>\u6CE8\u610F\u770B\uFF0C<code>Object value = key.childValue(e.value);</code>\u8FD9\u4E00\u6B65\u4E3A\u4EC0\u4E48\u5B58\u5728\u5462\uFF1F\u8FD9\u4E2A\u65B9\u6CD5\u662F\u4E0D\u662F\u5F88\u719F\u6089\uFF1F\u5C31\u662F\u5728InheritableThreadLocal\u4E2D\uFF0C\u91CD\u5199\u4E86\u7236\u7C7B\u7684\u65B9\u6CD5\uFF0C\u800C\u8FD9\u4E2A\u64CD\u4F5C\u53EF\u4EE5\u662F\u548C\u7236\u7C7B\u7684\u503C\u4E00\u6837\uFF0C\u4E5F\u53EF\u4EE5\u6211\u4EEC\u521B\u5EFA\u4E2A\u7C7B\u7EE7\u627FInheritableThreadLocal\u518D\u91CD\u5199\u540E\u64CD\u4F5C\u4E00\u756A\uFF0C\u6BD4\u5982\u6DFB\u52A0\u70B9\u4EC0\u4E48\uFF0C\u65E5\u5FD7\uFF1F\u90FD\u53EF\u4EE5\uFF1B</p><h3 id="\u5E94\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u5E94\u7528\u573A\u666F" aria-hidden="true">#</a> \u5E94\u7528\u573A\u666F</h3><p><strong>\u573A\u666F\u4E00</strong></p><p>\u4EE3\u66FF\u53C2\u6570\u7684\u663E\u5F0F\u4F20\u9012\u5F53\u6211\u4EEC\u5728\u5199API\u63A5\u53E3\u7684\u65F6\u5019\uFF0C\u901A\u5E38Controller\u5C42\u4F1A\u63A5\u53D7\u6765\u81EA\u524D\u7AEF\u7684\u5165\u53C2\uFF0C\u5F53\u8FD9\u4E2A\u63A5\u53E3\u529F\u80FD\u6BD4\u8F83\u590D\u6742\u7684\u65F6\u5019\uFF0C\u53EF\u80FD\u6211\u4EEC\u8C03\u7528\u7684Service\u5C42\u5185\u90E8\u8FD8\u8C03\u7528\u4E86\u5F88\u591A\u5176\u4ED6\u7684\u5F88\u591A\u65B9\u6CD5\uFF0C\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u4F1A\u5728\u6BCF\u4E2A\u8C03\u7528\u7684\u65B9\u6CD5\u4E0A\u52A0\u4E0A\u9700\u8981\u4F20\u9012\u7684\u53C2\u6570\u3002\u4F46\u662F\u5982\u679C\u6211\u4EEC\u5C06\u53C2\u6570\u5B58\u5165ThreadLocal\u4E2D\uFF0C\u90A3\u4E48\u5C31\u4E0D\u7528\u663E\u5F0F\u7684\u4F20\u9012\u53C2\u6570\u4E86\uFF0C\u800C\u662F\u53EA\u9700\u8981ThreadLocal\u4E2D\u83B7\u53D6\u5373\u53EF\u3002\u8FD9\u4E2A\u573A\u666F\u5176\u5B9E\u4F7F\u7528\u7684\u6BD4\u8F83\u5C11\uFF0C\u4E00\u65B9\u9762\u663E\u5F0F\u4F20\u53C2\u6BD4\u8F83\u5BB9\u6613\u7406\u89E3\uFF0C\u53E6\u4E00\u65B9\u9762\u6211\u4EEC\u53EF\u4EE5\u5C06\u591A\u4E2A\u53C2\u6570\u5C01\u88C5\u4E3A\u5BF9\u8C61\u53BB\u4F20\u9012\u3002</p><p><strong>\u573A\u666F\u4E8C</strong></p><p>\u5168\u5C40\u5B58\u50A8\u7528\u6237\u4FE1\u606F\u5728\u73B0\u5728\u7684\u7CFB\u7EDF\u8BBE\u8BA1\u4E2D\uFF0C\u524D\u540E\u7AEF\u5206\u79BB\u5DF2\u57FA\u672C\u6210\u4E3A\u5E38\u6001\uFF0C\u5206\u79BB\u4E4B\u540E\u5982\u4F55\u83B7\u53D6\u7528\u6237\u4FE1\u606F\u5C31\u6210\u4E86\u4E00\u4EF6\u9EBB\u70E6\u4E8B\uFF0C\u901A\u5E38\u5728\u7528\u6237\u767B\u5F55\u540E\uFF0C \u7528\u6237\u4FE1\u606F\u4F1A\u4FDD\u5B58\u5728Session\u6216\u8005Token\u4E2D\u3002\u8FD9\u4E2A\u65F6\u5019\uFF0C\u6211\u4EEC\u5982\u679C\u4F7F\u7528\u5E38\u89C4\u7684\u624B\u6BB5\u53BB\u83B7\u53D6\u7528\u6237\u4FE1\u606F\u4F1A\u5F88\u8D39\u52B2\uFF0C\u62FFSession\u6765\u8BF4\uFF0C\u6211\u4EEC\u8981\u5728\u63A5\u53E3\u53C2\u6570\u4E2D\u52A0\u4E0AHttpServletRequest\u5BF9\u8C61\uFF0C\u7136\u540E\u8C03\u7528 getSession\u65B9\u6CD5\uFF0C\u4E14\u6BCF\u4E00\u4E2A\u9700\u8981\u7528\u6237\u4FE1\u606F\u7684\u63A5\u53E3\u90FD\u8981\u52A0\u4E0A\u8FD9\u4E2A\u53C2\u6570\uFF0C\u624D\u80FD\u83B7\u53D6Session\uFF0C\u8FD9\u6837\u5B9E\u73B0\u5C31\u5F88\u9EBB\u70E6\u4E86\u3002\u5728\u5B9E\u9645\u7684\u7CFB\u7EDF\u8BBE\u8BA1\u4E2D\uFF0C\u6211\u4EEC\u80AF\u5B9A\u4E0D\u4F1A\u91C7\u7528\u4E0A\u9762\u6240\u8BF4\u7684\u8FD9\u79CD\u65B9\u5F0F\uFF0C\u800C\u662F\u4F7F\u7528ThreadLocal\uFF0C\u6211\u4EEC\u4F1A\u9009\u62E9\u5728\u62E6\u622A\u5668\u7684\u4E1A\u52A1\u4E2D\uFF0C \u83B7\u53D6\u5230\u4FDD\u5B58\u7684\u7528\u6237\u4FE1\u606F\uFF0C\u7136\u540E\u5B58\u5165ThreadLocal\uFF0C\u90A3\u4E48\u5F53\u524D\u7EBF\u7A0B\u5728\u4EFB\u4F55\u5730\u65B9\u5982\u679C\u9700\u8981\u62FF\u5230\u7528\u6237\u4FE1\u606F\u90FD\u53EF\u4EE5\u4F7F\u7528ThreadLocal\u7684get()\u65B9\u6CD5 (\u5F02\u6B65\u7A0B\u5E8F\u4E2DThreadLocal\u662F\u4E0D\u53EF\u9760\u7684)\u5BF9\u4E8E\u7B14\u8005\u800C\u8A00\uFF0C\u8FD9\u4E2A\u573A\u666F\u4F7F\u7528\u7684\u6BD4\u8F83\u591A\uFF0C\u5F53\u7528\u6237\u767B\u5F55\u540E\uFF0C\u4F1A\u5C06\u7528\u6237\u4FE1\u606F\u5B58\u5165Token\u4E2D\u8FD4\u56DE\u524D\u7AEF\uFF0C\u5F53\u7528\u6237\u8C03\u7528\u9700\u8981\u6388\u6743\u7684\u63A5\u53E3\u65F6\uFF0C\u9700\u8981\u5728header\u4E2D\u643A\u5E26 Token\uFF0C\u7136\u540E\u62E6\u622A\u5668\u4E2D\u89E3\u6790Token\uFF0C\u83B7\u53D6\u7528\u6237\u4FE1\u606F\uFF0C\u8C03\u7528\u81EA\u5B9A\u4E49\u7684\u7C7B(AuthNHolder)\u5B58 ThreadLocal\u4E2D\uFF0C\u5F53\u8BF7\u6C42\u7ED3\u675F\u7684\u65F6\u5019\uFF0C\u5C06ThreadLocal\u5B58\u50A8\u6570\u636E\u6E05\u7A7A\uFF0C \u4E2D\u95F4\u7684\u8FC7\u7A0B\u65E0\u9700\u5728\u5173\u6CE8\u5982\u4F55\u83B7\u53D6\u7528\u6237\u4FE1\u606F\uFF0C\u53EA\u9700\u8981\u4F7F\u7528\u5DE5\u5177\u7C7B\u7684get\u65B9\u6CD5\u5373\u53EF\u3002</p><p><strong>\u573A\u666F\u4E09</strong></p><p>\u89E3\u51B3\u7EBF\u7A0B\u5B89\u5168\u95EE\u9898\u5728Spring\u7684Web\u9879\u76EE\u4E2D\uFF0C\u6211\u4EEC\u901A\u5E38\u4F1A\u5C06\u4E1A\u52A1\u5206\u4E3AController\u5C42\uFF0CService\u5C42\uFF0CDao\u5C42\uFF0C\u6211\u4EEC\u90FD\u77E5\u9053@Autowired\u6CE8\u89E3\u9ED8\u8BA4\u4F7F\u7528\u5355\u4F8B\u6A21\u5F0F\uFF0C\u90A3\u4E48\u4E0D\u540C\u8BF7\u6C42\u7EBF\u7A0B\u8FDB\u6765\u4E4B\u540E\uFF0C\u7531\u4E8EDao\u5C42\u4F7F\u7528\u5355\u4F8B\uFF0C\u90A3\u4E48\u8D1F\u8D23\u6570\u636E\u5E93\u8FDE\u63A5\u7684Connection\u4E5F\u53EA\u6709\u4E00\u4E2A\uFF0C\u5982\u679C\u6BCF\u4E2A\u8BF7\u6C42\u7EBF\u7A0B\u90FD\u53BB\u8FDE\u63A5\u6570\u636E\u5E93\uFF0C\u90A3\u4E48\u5C31\u4F1A\u9020\u6210\u7EBF\u7A0B\u4E0D\u5B89\u5168\u7684\u95EE\u9898\uFF0CSpring\u662F\u5982\u4F55\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u7684\u5462\uFF1F\u5728Spring\u9879\u76EE\u4E2DDao\u5C42\u4E2D\u88C5\u914D\u7684Connection\u80AF\u5B9A\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u5176\u89E3\u51B3\u65B9\u6848\u5C31\u662F\u91C7\u7528ThreadLocal\u65B9\u6CD5\uFF0C\u5F53\u6BCF\u4E2A\u8BF7\u6C42\u7EBF\u7A0B\u4F7F\u7528Connection\u7684\u65F6\u5019\uFF0C\u90FD\u4F1A\u4ECEThreadLocal\u83B7\u53D6\u4E00\u6B21\uFF0C\u5982\u679C\u4E3Anull\uFF0C\u8BF4\u660E\u6CA1\u6709\u8FDB\u884C\u8FC7\u6570\u636E\u5E93\u8FDE\u63A5\uFF0C\u8FDE\u63A5\u540E\u5B58\u5165ThreadLocal\u4E2D\uFF0C\u5982\u6B64\u4E00\u6765\uFF0C\u6BCF\u4E00\u4E2A\u8BF7\u6C42\u7EBF\u7A0B\u90FD\u4FDD\u5B58\u6709\u4E00\u4EFD \u81EA\u5DF1\u7684Connection\u3002\u4E8E\u662F\u4FBF\u89E3\u51B3\u4E86\u7EBF\u7A0B\u5B89\u5168\u95EE\u9898ThreadLocal\u5728\u8BBE\u8BA1\u4E4B\u521D\u5C31\u662F\u4E3A\u89E3\u51B3\u5E76\u53D1\u95EE\u9898\u800C\u63D0\u4F9B\u4E00\u79CD\u65B9\u6848\uFF0C\u6BCF\u4E2A\u7EBF\u7A0B\u7EF4\u62A4\u4E00\u4EFD\u81EA\u5DF1\u7684\u6570\u636E\uFF0C\u8FBE\u5230\u7EBF\u7A0B\u9694\u79BB\u7684\u6548\u679C\u3002</p><h2 id="synchronized\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#synchronized\u539F\u7406" aria-hidden="true">#</a> Synchronized\u539F\u7406</h2><h2 id="jvm\u7684\u9501\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#jvm\u7684\u9501\u4F18\u5316" aria-hidden="true">#</a> JVM\u7684\u9501\u4F18\u5316</h2><h2 id="\u8BF4\u4E00\u4E0Bvolatile\u7684\u4F5C\u7528\u4E0E\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u8BF4\u4E00\u4E0Bvolatile\u7684\u4F5C\u7528\u4E0E\u5B9E\u73B0" aria-hidden="true">#</a> \u8BF4\u4E00\u4E0Bvolatile\u7684\u4F5C\u7528\u4E0E\u5B9E\u73B0</h2><h2 id="\u804A\u4E00\u804Areentrantlock" tabindex="-1"><a class="header-anchor" href="#\u804A\u4E00\u804Areentrantlock" aria-hidden="true">#</a> \u804A\u4E00\u804AReentrantLock</h2><h2 id="\u8BF4\u4E00\u4E0Bsemaphore\u7684\u7528\u6CD5\u4E0E\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u8BF4\u4E00\u4E0Bsemaphore\u7684\u7528\u6CD5\u4E0E\u5B9E\u73B0" aria-hidden="true">#</a> \u8BF4\u4E00\u4E0BSemaphore\u7684\u7528\u6CD5\u4E0E\u5B9E\u73B0</h2><h2 id="countdownlatch\u7684\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#countdownlatch\u7684\u7528\u6CD5" aria-hidden="true">#</a> CountdownLatch\u7684\u7528\u6CD5</h2><h2 id="cyclicbarrier\u7684\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#cyclicbarrier\u7684\u7528\u6CD5" aria-hidden="true">#</a> CyclicBarrier\u7684\u7528\u6CD5</h2><h2 id="\u6DF1\u5165\u804A\u4E00\u4E0B\u7EBF\u7A0B\u6C60" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u5165\u804A\u4E00\u4E0B\u7EBF\u7A0B\u6C60" aria-hidden="true">#</a> \u6DF1\u5165\u804A\u4E00\u4E0B\u7EBF\u7A0B\u6C60</h2><h2 id="cas\u600E\u4E48\u7528" tabindex="-1"><a class="header-anchor" href="#cas\u600E\u4E48\u7528" aria-hidden="true">#</a> CAS\u600E\u4E48\u7528</h2><h2 id="\u4E3A\u4EC0\u4E48\u4F1A\u6709\u539F\u5B50\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u4F1A\u6709\u539F\u5B50\u7C7B" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u4F1A\u6709\u539F\u5B50\u7C7B</h2><h2 id="\u8BF4\u4E00\u8BF4\u7EBF\u7A0B\u901A\u4FE1\u6709\u54EA\u4E9B\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u8BF4\u4E00\u8BF4\u7EBF\u7A0B\u901A\u4FE1\u6709\u54EA\u4E9B\u65B9\u5F0F" aria-hidden="true">#</a> \u8BF4\u4E00\u8BF4\u7EBF\u7A0B\u901A\u4FE1\u6709\u54EA\u4E9B\u65B9\u5F0F</h2>`,144);function h(b,w){const e=i("ExternalLinkIcon");return o(),c("div",null,[u,s("p",null,[n("\u4E3A\u4E86\u63CF\u8FF0\u63A7\u5236\u8FDB\u7A0B\u7684\u8FD0\u884C\uFF0C\u7CFB\u7EDF\u4E2D\u5B58\u653E\u8FDB\u7A0B\u7684\u7BA1\u7406\u548C\u63A7\u5236\u4FE1\u606F\u7684\u6570\u636E\u7ED3\u6784\u79F0\u4E3A"),s("a",r,[n("\u8FDB\u7A0B\u63A7\u5236\u5757"),t(e)]),n("\uFF08PCB Process Control Block\uFF09\uFF0C\u5B83\u662F\u8FDB\u7A0B\u5B9E\u4F53\u7684\u4E00\u90E8\u5206\uFF0C\u662F\u64CD\u4F5C\u7CFB\u7EDF\u4E2D\u6700\u91CD\u8981\u7684\u8BB0\u5F55\u6027\u6570\u636E\u7ED3\u6784\u3002\u5B83\u662F\u8FDB\u7A0B\u7BA1\u7406\u548C\u63A7\u5236\u7684\u6700\u91CD\u8981\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u6BCF\u4E00\u4E2A\u8FDB\u7A0B\u5747\u6709\u4E00\u4E2APCB\uFF0C\u5728\u521B\u5EFA\u8FDB\u7A0B\u65F6\uFF0C\u5EFA\u7ACBPCB\uFF0C\u4F34\u968F\u8FDB\u7A0B\u8FD0\u884C\u7684\u5168\u8FC7\u7A0B\uFF0C\u76F4\u5230\u8FDB\u7A0B\u64A4\u6D88\u800C\u64A4\u6D88\u3002")]),d,s("p",null,[s("a",k,[n("\u539F\u5B50\u6027"),t(e)]),n("\u662F\u6307"),v,n("\u3002\u53CA\u65F6\u5728\u591A\u4E2A\u7EBF\u7A0B\u4E00\u8D77\u6267\u884C\u7684\u65F6\u5019\uFF0C\u4E00\u4E2A\u64CD\u4F5C\u4E00\u65E6\u5F00\u59CB\uFF0C\u5C31\u4E0D\u4F1A\u88AB\u5176\u4ED6\u7EBF\u7A0B\u6240\u5E72\u6270\u3002")]),m])}const f=p(l,[["render",h],["__file","3-\u5E76\u53D1\u7F16\u7A0B.html.vue"]]);export{f as default};
